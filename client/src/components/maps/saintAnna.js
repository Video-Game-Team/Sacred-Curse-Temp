import React, { useEffect, useState, useRef } from 'react';
import LeftWalker from '../../assets/images/leftWalker.png';
import RightWalker from '../../assets/images/rightWalker.png';
import UpWalker from '../../assets/images/upWalker.png';
import DownWalker from '../../assets/images/downWalker.png';
import EmptyCanvas from '../../assets/images/newone.png';
import BackgroundImage1 from '../../assets/maps/map 40x 40 w grid.png';
import PlayerSpriteSheet from '../../assets/images/AjFP5.png';

import click1 from '../../audioclips/click1.mp3';
import text from '../../audioclips/Text.mp3';
import SnowMan from '../../audioclips/Snowman.mp3';

import '../../saintAnna.css';

const SaintAnna = (props) => {
  //this sets the x Cordinate to transform the map and character location
  const [xTransformVar, setXTransformVar] = useState(-88);
  //this sets the y Cordinate to transform the map and character location
  const [yTransformVar, setYTransformVar] = useState(-1172);
  //

  const requestRef = useRef();
  //this sets the speed for the map to move. bigger number goes faster
  const speedRef = useRef(4);

  const [tick, setTick] = useState(1);
  //correpsondds with a css class to tell it which version of the sprite to load. ie "left", "right"
  // const [facing.current, setFacing] = useState("right");
  const facing = useRef();
  //corresponds with a css class. determiines if the sprite gets animated or not
  const [walker, setWalker] = useState('false');
  // const [walkerArr, setWalkerkArr]= useState([])
  const dirArr = useRef([]);

  const xBank = useRef(0);
  const yBank = useRef(0);
  const yPlayerIndex = useRef(23);
  const xPlayerIndex = useRef(11);
  const [gridArray, setGridArray] = useState([]);
  const [textValue, setTextValue] = useState(null);

  //Music Playing
  const clickAudio1 = () => new Audio(SnowMan).play();

  // //NPC Dialogue sound effect
  const clickAudio2 = () => new Audio(text).play();

  //Starts off Music Loop
  useEffect(() => {
    {
      clickAudio1();
    }
  }, []);

  // let currentMap2 = [
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0,
  //   ],
  // ];

  let currentMap = [
    [
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 39, 40, 39, 40, 39,
      40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111,
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111,
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127,
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127,
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79,
      80, 79, 4097, 4098, 4099, 4100, 4101, 4097, 4098, 4099, 4100, 4101, 4097,
      4098, 4099, 4100, 4101, 4097, 4098, 4099, 4100, 4101, 4097, 4098, 4099,
      4100, 4101, 4097, 4098, 4099, 4100, 4101, 4097, 4098, 4099, 4100, 4101,
      4097, 4098, 4099, 4100, 4101, 4097, 4098, 4099, 4100, 4101, 4097, 4098,
      4099, 4100, 4101, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79,
      80, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23,
      24, 23, 24,
    ],
    [
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 4113, 4114, 4115, 4116, 4117, 4113, 4114, 4115, 4116, 4117, 4113,
      4114, 4115, 4116, 4117, 4113, 4114, 4115, 4116, 4117, 4113, 4114, 4115,
      4116, 4117, 4113, 4114, 4115, 4116, 4117, 4113, 4114, 4115, 4116, 4117,
      4113, 4114, 4115, 4116, 4117, 4113, 4114, 4115, 4116, 4117, 4113, 4114,
      4115, 4116, 4117, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39,
      40, 39, 40,
    ],
    [
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 4129, 4130, 4131, 4132, 4133, 4129, 4130, 4131,
      4132, 4133, 4129, 4130, 4131, 4132, 4133, 4129, 4130, 4131, 4132, 4133,
      4129, 4130, 4131, 4132, 4133, 4129, 4130, 4131, 4132, 4133, 4129, 4130,
      4131, 4132, 4133, 4129, 4130, 4131, 4132, 4133, 4129, 4130, 4131, 4132,
      4133, 4129, 4130, 4131, 4132, 4133, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 112, 111, 112, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 4145, 4146, 4147, 4148, 4149, 4054, 4146, 4147,
      4148, 4149, 4145, 4146, 4147, 4148, 4054, 4145, 4146, 4147, 4148, 4054,
      4054, 4146, 4147, 4148, 4149, 4145, 4146, 4147, 4148, 4054, 4145, 4146,
      4147, 4148, 4149, 4145, 4146, 4147, 4148, 4149, 4145, 4146, 4147, 4148,
      4149, 4145, 4146, 4147, 4148, 4149, 0, 0, 128, 127, 128, 127, 128, 127,
      128, 127, 128, 127, 128, 127, 128, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79,
      80, 79, 4161, 4054, 4098, 4099, 4100, 4054, 4098, 4099, 4100, 4054, 4098,
      4099, 4100, 4101, 4097, 4098, 4099, 4100, 4101, 4054, 4054, 4099, 4100,
      4101, 4054, 4098, 4099, 4100, 4101, 4097, 4098, 4099, 4100, 4101, 4097,
      4098, 4099, 4100, 4101, 4097, 4098, 4099, 4100, 4101, 4097, 4098, 4099,
      4100, 4101, 4165, 0, 0, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79,
      80, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23,
      24, 23, 24,
    ],
    [
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 0, 4054, 4114, 4115, 4116, 4113, 4114, 4115, 4116, 4113, 4114,
      4115, 4116, 4117, 4113, 4114, 4115, 4116, 4117, 4113, 4114, 4115, 4116,
      4117, 4113, 4114, 4115, 4116, 4117, 4113, 4114, 4115, 4116, 4117, 4113,
      4114, 4115, 4116, 4117, 4113, 4114, 4115, 4116, 4117, 4113, 4114, 4115,
      4116, 4117, 0, 0, 0, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40,
    ],
    [
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 0, 4129, 4130, 4131, 4132, 4129, 4130, 4131,
      4132, 4129, 4130, 4131, 4132, 4133, 4129, 4130, 4131, 4132, 4133, 4129,
      4130, 4131, 4132, 4133, 4129, 4130, 4131, 4132, 4133, 4129, 4130, 4131,
      4132, 4133, 4129, 4130, 4131, 4132, 4133, 4129, 4130, 4131, 4132, 4133,
      4129, 4130, 4131, 4132, 4133, 0, 0, 0, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 112, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23,
      24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 0, 4145, 4146, 4147, 4148, 4145, 4146, 4147,
      4148, 4145, 4146, 4147, 4148, 4149, 4145, 4146, 4147, 4148, 4149, 4145,
      4146, 4097, 4098, 4099, 4100, 4101, 4147, 4148, 4149, 4145, 4146, 4147,
      4148, 4149, 4145, 4146, 4147, 4148, 4149, 4145, 4146, 4147, 4148, 4149,
      4145, 4146, 4147, 4148, 4149, 0, 0, 0, 128, 127, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 128, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39,
      40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79,
      80, 79, 0, 4054, 4162, 4163, 4164, 4161, 4162, 4163, 4164, 4161, 4162,
      4163, 4164, 4165, 4161, 4162, 4163, 4164, 3849, 3850, 1, 4113, 4114, 4115,
      4116, 4117, 4163, 4164, 4165, 4161, 4162, 4163, 4164, 4165, 4161, 4162,
      4163, 4164, 4165, 4161, 4162, 4267, 4268, 4269, 4161, 4162, 4163, 4164,
      4165, 0, 0, 0, 0, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 0, 4054, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3865,
      3866, 0, 4129, 4130, 4131, 4132, 4133, 0, 0, 0, 0, 4054, 0, 0, 0, 0, 0, 0,
      0, 0, 1, 4282, 4283, 4284, 4285, 4286, 1, 0, 0, 0, 0, 0, 0, 0, 95, 96, 95,
      96, 95, 96, 95, 96, 95, 96, 95, 96, 39, 40, 39, 40, 39, 40, 39, 40, 39,
      40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 4146, 4147, 4148, 4149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 0, 0, 0, 0, 0, 0, 0, 111,
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 23, 24, 23, 24, 23,
      24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      4054, 0, 0, 0, 0, 0, 0, 0, 4163, 4164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 0, 0, 0, 0, 0, 0, 128,
      127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 39, 40, 39,
      40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79,
      80, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4267, 4268, 4269, 0, 0, 0,
      0, 0, 0, 0, 4267, 4268, 4269, 0, 0, 0, 0, 0, 5233, 5234, 5235, 4054, 0, 0,
      0, 0, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 0, 0, 0, 0, 0, 0, 80, 79,
      80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 23, 24, 23, 24, 23, 24, 23,
      24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 0, 4054, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4282, 4283, 4284, 4285,
      4286, 0, 0, 0, 0, 0, 4282, 4283, 4284, 4285, 4286, 0, 0, 0, 0, 5249, 5250,
      5251, 0, 0, 0, 0, 0, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 0, 0, 0, 0,
      0, 0, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4297, 4298,
      4299, 4300, 4301, 4302, 4303, 0, 0, 0, 4297, 4298, 4299, 4300, 4301, 4302,
      4303, 0, 0, 0, 5265, 5266, 5267, 0, 0, 0, 0, 0, 4402, 4403, 4404, 4405,
      4406, 4407, 4408, 0, 0, 0, 0, 0, 0, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 112, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23,
      24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4313, 4314,
      4315, 4316, 4317, 4318, 4319, 0, 0, 0, 4313, 4314, 4315, 4316, 4317, 4318,
      4319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4418, 4419, 4420, 4421, 4422, 4423,
      4424, 0, 0, 0, 0, 0, 0, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127,
      128, 127, 128, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39,
      40, 39, 40, 39, 40,
    ],
    [
      80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 0, 0, 0, 0, 0, 0,
      3304, 4519, 4520, 0, 0, 0, 0, 0, 0, 0, 0, 4329, 4330, 4331, 4332, 4333,
      4334, 4335, 0, 0, 0, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 79, 80,
      79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 0, 0, 0, 0, 0, 0,
      3320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4345, 4346, 4347, 4348, 4349, 4350,
      4351, 0, 0, 0, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 0, 0, 0, 0, 0, 0,
      3106, 3107, 3108, 3106, 3107, 3108, 3106, 3107, 3108, 3106, 3107, 3108,
      3106, 3106, 3107, 3107, 0, 0, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96,
      95, 96, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40,
    ],
    [
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4402, 4403, 4404, 4405,
      4406, 4407, 4408, 0, 0, 0, 4402, 4403, 4404, 4405, 4406, 4407, 4408, 0, 0,
      0, 0, 0, 0, 3122, 3123, 3124, 3122, 3123, 3124, 3122, 3123, 3124, 3122,
      3123, 3124, 3122, 3122, 3123, 3123, 0, 0, 112, 111, 112, 111, 112, 111,
      112, 111, 112, 111, 112, 111, 112, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4418, 4419, 4420, 4421, 4422, 4423,
      4424, 5308, 5309, 0, 4418, 4419, 4420, 4421, 4422, 4423, 4424, 0, 0, 0, 0,
      0, 0, 3159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3160, 0, 0, 128,
      127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 39, 40, 39,
      40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5327, 5328, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3159, 1794, 1795, 1796, 1797, 1798, 1799,
      1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 3160, 0, 0, 80, 79, 80,
      79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 236, 237, 238, 239, 240, 0, 0, 0,
      5803, 5804, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5346,
      5347, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3159, 1835, 1836, 1837,
      1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 3160, 0,
      0, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 39, 40, 39, 40, 39,
      40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 0,
      1670, 1671, 1672, 5821, 5822, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3159, 1876, 1877,
      1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
      3160, 0, 0, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111,
      112, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23,
      24, 23, 24,
    ],
    [
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 0,
      1701, 1702, 1703, 1704, 0, 3304, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3159, 3107, 3108,
      3106, 3107, 3108, 3106, 3107, 3108, 3106, 3107, 3108, 3106, 3107, 3108, 0,
      0, 0, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 39,
      40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39,
      40,
    ],
    [
      80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 0, 0, 0, 0, 0, 0,
      3320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3443,
      3444, 3445, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3122, 3123, 3124, 3122, 3123,
      3124, 3122, 3123, 3124, 3122, 3123, 3124, 3122, 3123, 3124, 0, 0, 0, 80,
      79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3458,
      3459, 3460, 3461, 3462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3170, 3171, 3172, 3170,
      0, 0, 3170, 3171, 3172, 3170, 3171, 3172, 3170, 3170, 3171, 0, 0, 0, 96,
      95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 3474, 3475, 3476, 3477, 3478, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 112, 111, 112, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 3490, 3491, 3492, 3493, 3494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 128, 127, 128, 39, 40, 39, 40, 4261, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79,
      80, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4267, 4268, 4269, 0, 0, 0, 0, 0, 0, 0,
      0, 3505, 3506, 3507, 3508, 3509, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 79, 80, 79, 80, 79, 80, 79, 80,
      79, 80, 79, 80, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 0, 0, 0, 0, 0, 0, 0, 0, 4282, 4283, 4284, 4285, 4286, 0, 0, 0, 0,
      0, 0, 0, 3521, 3522, 3523, 3524, 3525, 0, 0, 0, 0, 0, 0, 0, 0, 3380, 3381,
      3382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 0, 0,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 0, 0, 0, 0, 0, 0, 0, 4297, 4298, 4299, 4300,
      4301, 4302, 4303, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      3396, 3397, 3398, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4993,
      4994, 4995, 4993, 4994, 4995, 5803, 5804, 4995, 4993, 4994, 4995, 4337,
      4311, 4312, 4340, 4341, 4342, 4343, 4344, 0, 0, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24,
    ],
    [
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 0, 0, 0, 0, 0, 0, 0, 4313, 4314, 4315, 4316,
      4317, 4318, 4319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      3412, 3413, 3414, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5009,
      5010, 5011, 5009, 5010, 5011, 5821, 5822, 5011, 5009, 5010, 5011, 4353, 0,
      4328, 4356, 4357, 4358, 4359, 4360, 0, 0, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40,
    ],
    [
      80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79,
      80, 79, 0, 0, 0, 0, 0, 0, 0, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3428, 3429, 3430, 0,
      0, 0, 0, 0, 0, 4054, 0, 0, 0, 0, 0, 0, 4054, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 24, 23, 24, 23, 24, 23,
      24, 23, 24,
    ],
    [
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 0, 0, 0, 0, 0, 0, 0, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 0, 0, 0, 0, 0, 0, 0, 4466, 4467, 4468, 4469,
      4470, 4471, 4472, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24,
    ],
    [
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 0, 0, 0, 0, 0, 0, 0, 4482, 4483, 4484, 4485, 0,
      4487, 4488, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5284, 5285, 3377, 3378, 3379, 0, 236, 237,
      238, 239, 239, 240, 237, 238, 237, 238, 237, 237, 238, 239, 240, 239, 240,
      237, 238, 239, 240, 238, 239, 240, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79,
      80, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5798, 5799, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      4054, 5287, 5288, 3393, 3394, 3395, 0, 0, 80, 79, 80, 79, 80, 79, 80, 79,
      80, 79, 80, 79, 80, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23,
      24, 23, 24, 23, 24, 23, 24,
    ],
    [
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5816, 5817, 0, 5221, 5222,
      5221, 5222, 5221, 5222, 5221, 5222, 5221, 5222, 0, 0, 0, 0, 0, 3497, 3498,
      3499, 3500, 3501, 3502, 3503, 3504, 0, 0, 0, 0, 0, 3145, 5290, 5291, 3409,
      3410, 3411, 0, 0, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 39,
      40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39,
      40,
    ],
    [
      112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      5221, 5222, 5221, 5222, 5221, 5222, 5221, 5222, 5221, 5222, 0, 0, 0, 0, 0,
      3513, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 0, 0, 0, 0, 4054, 3161,
      3162, 0, 3425, 3426, 3427, 4054, 0, 112, 111, 112, 111, 112, 111, 112,
      111, 112, 111, 112, 111, 112, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23,
      24, 23, 24, 23, 24, 23, 24, 23, 24,
    ],
    [
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128,
      127, 128, 127, 128, 127, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      5221, 5222, 5221, 5222, 5221, 5222, 5221, 4054, 5221, 5222, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 127,
      128, 127, 128, 127, 128, 127, 128, 127, 128, 127, 128, 39, 40, 39, 40, 39,
      40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79,
      80, 79, 153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 79, 80, 23,
      24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23,
      24,
    ],
    [
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95,
      96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 95, 96, 39, 40, 39, 40, 39,
      40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
    ],
    [
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23,
    ],
    [
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39,
    ],
    [
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23,
    ],
    [
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40,
      39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39, 40, 39,
    ],
    [
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24,
      23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23,
    ],
  ];

  console.log('COORDINATE', yPlayerIndex.current, xPlayerIndex.current);
  console.log(
    'VALUE Right',
    currentMap[yPlayerIndex.current][xPlayerIndex.current]
  );

  // useEffect(() => {
  //   let tempGrid = [];
  //   for (let i = 0; i < currentMap.length; i++) {
  //     for (let j = 0; j < currentMap[i].length; j++) {
  //       tempGrid.push(
  //         <button
  //           onClick={() => {
  //             console.log(`Coordinates ${i} - ${j}`);
  //           }}
  //           className="numbers"
  //           style={{
  //             gridColumn: j + 1,
  //             gridRow: i + 1,
  //             color: 'white',
  //           }}
  //         >
  //           {/* {i} - {j} */}
  //           {currentMap[i][j]}
  //         </button>
  //       );
  //     }
  //   }
  //   setGridArray(tempGrid);
  // }, []);

  useEffect(() => {
    if (props.previousMap === 'indoorHouse6') {
      //setYCord
      yPlayerIndex.current = 39;
      //setXcord
      xPlayerIndex.current = 31;
      //set xTransform
      setXTransformVar(-1368);
      //set yTransform
      setYTransformVar(-2192);
      facing.current = 'down';
    }
  }, []);

  //  // UseEffect Keeping track of player conditions
  useEffect(() => {
    //yPlayerIndex up and down values
    // TheWall Map check conditions
    if (yPlayerIndex.current === 38 && xPlayerIndex.current === 31) {
      props.active('indoorHouse6', 'saintAnna');
    }
  }, [yPlayerIndex.current]);

  //CHARACTER DIALOGUE USE EFFECT
  useEffect(() => {
    const dialogueAction = (event) => {
      if (event.key === 'a') {
        //Facing up
        if (facing.current === 'up') {
          // //Guard 1 Lower left NPC
          // if (
          //   (yPlayerIndex.current === 38 && xPlayerIndex.current === 32) ||
          //   (yPlayerIndex.current === 38 && xPlayerIndex.current === 33)
          // ) {
          //   setTextValue('Hi I am Guard1');
          //   console.log('Hi I am Guard1');
          // }
          //YO Mama NPC
          if (
            (yPlayerIndex.current === 41 && xPlayerIndex.current === 33) ||
            (yPlayerIndex.current === 41 && xPlayerIndex.current === 34)
          ) {
            setTextValue("Hi I'm red shirt");
          }
          //Hot Girl
          if (
            (yPlayerIndex.current === 25 && xPlayerIndex.current === 39) ||
            (yPlayerIndex.current === 25 && xPlayerIndex.current === 38)
          ) {
            setTextValue("Hi I'm blonde girl");
          }
          //Hot Girl
          if (
            (yPlayerIndex.current === 35 && xPlayerIndex.current === 78) ||
            (yPlayerIndex.current === 35 && xPlayerIndex.current === 79) ||
            (yPlayerIndex.current === 35 && xPlayerIndex.current === 80)
          ) {
            setTextValue("Hi I'm dock guy 2");
          }
        }

        //Facing down
        if (!facing.current) {
          //Jim NPC
          if (
            (yPlayerIndex.current === 23 && xPlayerIndex.current === 18) ||
            (yPlayerIndex.current === 23 && xPlayerIndex.current === 19)
          ) {
            setTextValue("Hi I'm Dock guy 1");
          }
          //YO Mama NPC
          if (
            (yPlayerIndex.current === 38 && xPlayerIndex.current === 34) ||
            (yPlayerIndex.current === 38 && xPlayerIndex.current === 33)
          ) {
            setTextValue("Hi I'm blonde girl");
          }
          //Hot Girl
          // if (
          //   (yPlayerIndex.current === 34 && xPlayerIndex.current === 14) ||
          //   (yPlayerIndex.current === 34 && xPlayerIndex.current === 15)
          // ) {
          //   console.log("Hi I'm Guard 3");
          // }
          //Hot Girl
          // if (
          //   (yPlayerIndex.current === 21 && xPlayerIndex.current === 33) ||
          //   (yPlayerIndex.current === 21 && xPlayerIndex.current === 34)
          // ) {
          //   console.log("Hi I'm guard 4");
          // }
        }

        //Facing left
        if (facing.current === 'left') {
          if (
            (yPlayerIndex.current === 24 && xPlayerIndex.current === 20) ||
            (yPlayerIndex.current === 25 && xPlayerIndex.current === 20)
          ) {
            setTextValue("Hi I'm Dock guy 1");
          }
          //YO Mama NPC
          if (
            (yPlayerIndex.current === 39 && xPlayerIndex.current === 35) ||
            (yPlayerIndex.current === 40 && xPlayerIndex.current === 35)
          ) {
            setTextValue("Hi I'm red shirt");
          }
          //Hot Girl
          if (
            (yPlayerIndex.current === 22 && xPlayerIndex.current === 40) ||
            (yPlayerIndex.current === 23 && xPlayerIndex.current === 40)
          ) {
            setTextValue("Hi I'm blonde girl");
          }
          //Hot Girl
          // if (
          //   (yPlayerIndex.current === 22 && xPlayerIndex.current === 34) ||
          //   (yPlayerIndex.current === 23 && xPlayerIndex.current === 34)
          // ) {
          //   console.log("Hi I'm guard 4");
          // }
        }

        //Facing right
        if (facing.current === 'right') {
          if (
            (yPlayerIndex.current === 24 && xPlayerIndex.current === 17) ||
            (yPlayerIndex.current === 25 && xPlayerIndex.current === 17)
          ) {
            setTextValue("Hi I'm Dock guy 1");
          }
          //YO Mama NPC
          if (
            (yPlayerIndex.current === 39 && xPlayerIndex.current === 32) ||
            (yPlayerIndex.current === 40 && xPlayerIndex.current === 32)
          ) {
            setTextValue("Hi I'm red shirt");
          }
          //Hot Girl
          // if (
          //   (yPlayerIndex.current === 22 && xPlayerIndex.current === 22) ||
          //   (yPlayerIndex.current === 23 && xPlayerIndex.current === 22)
          // ) {
          //    console.log("Hi I'm blonde girl");
          // }
          //Hot Girl
          // if (
          //   (yPlayerIndex.current === 22 && xPlayerIndex.current === 32) ||
          //   (yPlayerIndex.current === 23 && xPlayerIndex.current === 32)
          // ) {
          //   console.log("Hi I'm guard 4");
          // }
        }
      }
    };
    window.addEventListener('keydown', dialogueAction);
    return () => {
      window.removeEventListener('keydown', dialogueAction);
    };
  }, []);



  //OVERWOLRD ITEM CHECK LOGIC
  useEffect(() => {
    const dialogueAction = (event) => {
      if (event.key === 'b') {
        //Facing right
        if (facing.current === 'up') {
          if (
            (yPlayerIndex.current === 22 && xPlayerIndex.current === 20) ||
            (yPlayerIndex.current === 22 && xPlayerIndex.current === 19)
          ) {
            clickAudio2();
            setTextValue('Welcome to Saint Anna');
          }
           if (
             (yPlayerIndex.current === 20 && xPlayerIndex.current === 21) ||
             (yPlayerIndex.current === 20 && xPlayerIndex.current === 20)
           ) {
             clickAudio2();
             setTextValue('< This way to the Docks');
           }
        }
      }
    };
    window.addEventListener('keydown', dialogueAction);
    return () => {
      window.removeEventListener('keydown', dialogueAction);
    };
  }, []);




  //event listen for enter
  useEffect(() => {
    window.addEventListener('keydown', (e) => {
      if (e.key === 'Enter') {
        if (facing.current === 'up') {
          if (
            xBank.current + 32 > 64 &&
            currentMap[yPlayerIndex.current - 1][xPlayerIndex.current + 1] ===
              'door1'
          ) {
          }
          if (
            currentMap[yPlayerIndex.current - 1][xPlayerIndex.current] ===
              'sign1' &&
            64 - xBank.current > 32
          ) {
            console.log('sign1');
          }
          if (
            xBank.current + 32 > 64 &&
            currentMap[yPlayerIndex.current - 1][xPlayerIndex.current + 1] ===
              'sign2'
          ) {
            console.log('sign2');
          }
          if (
            currentMap[yPlayerIndex.current - 1][xPlayerIndex.current] ===
              'sign2' &&
            64 - xBank.current > 32
          ) {
            console.log('sign2');
          }
        }
        if (facing.current == null) {
          if (
            currentMap[yPlayerIndex.current + 1][xPlayerIndex.current] ===
              'sign1' &&
            xBank.current + 32 < 64
          ) {
            console.log('sign1');
          }
          if (
            currentMap[yPlayerIndex.current + 1][xPlayerIndex.current + 1] ===
            'sign2'
          ) {
            console.log('poopshit');
          }
          if (
            currentMap[yPlayerIndex.current + 1][xPlayerIndex.current] ===
              'sign2' &&
            xBank.current + 32 < 64
          ) {
            console.log('sign2');
          }
        }
      }
    });
  }, []);

  //DOOR LOCKED LOGIC
  useEffect(() => {
    const dialogueAction = (event) => {
      if (event.key === 'b') {
        //Facing up
        if (facing.current === 'up') {
          if (
            (yPlayerIndex.current === 33 && xPlayerIndex.current === 42) ||
            (yPlayerIndex.current === 25 && xPlayerIndex.current === 35) ||
            (yPlayerIndex.current === 23 && xPlayerIndex.current === 45) ||
            (yPlayerIndex.current === 19 && xPlayerIndex.current === 63) ||
            (yPlayerIndex.current === 42 && xPlayerIndex.current === 51)
          ) {
            clickAudio2();
            setTextValue('This door is locked');
          }
        }
      }
    };
    window.addEventListener('keydown', dialogueAction);
    return () => {
      window.removeEventListener('keydown', dialogueAction);
    };
  }, []);

  //listens for the current down key and saves it as the currentkey state
  //wrapping in a useEffect prevents compounding event listeners
  useEffect(() => {
    const keyDownHandler = (event) => {
      // console.log(event.key)

      if (
        event.key === 'ArrowRight' ||
        event.key === 'ArrowLeft' ||
        event.key === 'ArrowUp' ||
        event.key === 'ArrowDown'
      ) {
        let newArr = dirArr.current;
        // if the key stroke is not in the array
        if (newArr.indexOf(event.key) == -1) {
          newArr.unshift(event.key);

          dirArr.current = newArr;
          setTick((prevCount) => prevCount + 1);
        }
        setTextValue(null);
      }
    };

    window.addEventListener('keydown', keyDownHandler);

    const keyUpHandler = (event) => {
      if (dirArr.current.indexOf(event.key) > -1) {
        let newArr2 = dirArr.current.filter((el) => el != event.key);
        dirArr.current = newArr2;
        setTick((prevCount) => prevCount + 1);
      }
    };
    window.addEventListener('keyup', keyUpHandler);

    return () => {
      window.removeEventListener('keydown', keyDownHandler);
      window.removeEventListener('keyup', keyUpHandler);
    };

    //when the key is lifted it sets the current key to null to stop map movement and the walker to false to stop the animation
  }, []);

  //facing logic. It needed to be removed from the animate because it was cuasing
  dirArr.current[0] === 'ArrowRight'
    ? (facing.current = 'right')
    : dirArr.current[0] === 'ArrowLeft'
    ? (facing.current = 'left')
    : dirArr.current[0] === 'ArrowUp'
    ? (facing.current = 'up')
    : dirArr.current[0] == 'ArrowDown'
    ? (facing.current = null)
    : null;

  //animate is a reccursive function that takes the current key and updates the cordinate variables depending on which direction is pushed. It also sets which way the character is facing
  const animate = () => {
    //if current key is d, the x cordinate becomes  the previous state + the speed

    if (dirArr.current[0] === 'ArrowRight') {
      if (
        currentMap[yPlayerIndex.current][xPlayerIndex.current + 1] === 0 ||
        xBank.current < 0
      )
        if (
          yBank.current + 32 < 64 ||
          currentMap[yPlayerIndex.current - 1][xPlayerIndex.current + 1] == 0
        ) {
          {
            setXTransformVar((prevCount) => prevCount - speedRef.current);
            // console.log(newMap[yPlayerIndex.current][xPlayerIndex.current+1])
            xBank.current = xBank.current + speedRef.current;
            // console.log(yPlayerIndex.current,xPlayerIndex.current)
            if (xBank.current === 64) {
              xPlayerIndex.current = xPlayerIndex.current + 1;

              xBank.current = 0;
            }
          }
        }
    }
    //if current key is a, the x cordinate becomes  the previous state - the speed

    if (dirArr.current[0] === 'ArrowLeft') {
      if (
        currentMap[yPlayerIndex.current][xPlayerIndex.current - 1] === 0 ||
        xBank.current > 0
      )
        if (
          yBank.current + 32 < 64 ||
          currentMap[yPlayerIndex.current - 1][xPlayerIndex.current] == 0
        ) {
          {
            setXTransformVar((prevCount) => prevCount + speedRef.current);
            xBank.current = xBank.current - speedRef.current;
            // console.log(yPlayerIndex.current,xPlayerIndex.current)

            if (xBank.current < 0) {
              // console.log("this one",xBank.current)

              xPlayerIndex.current = xPlayerIndex.current - 1;
              // console.log(yPlayerIndex.current, xPlayerIndex.current);
              // alert(xPlayerIndex.current)
              xBank.current = 60;
            }
          }
        }
    }

    //if current key is w, the y cordinate becomes  the previous state + the speed
    if (dirArr.current[0] === 'ArrowUp') {
      if (
        currentMap[yPlayerIndex.current - 1][xPlayerIndex.current] === 0 ||
        yBank.current < 0
      ) {
        if (
          xBank.current + 48 < 64 ||
          currentMap[yPlayerIndex.current - 1][xPlayerIndex.current + 1] == 0
        ) {
          setYTransformVar((prevCount) => prevCount + speedRef.current);
          // console.log(yPlayerIndex.current,xPlayerIndex.current)
          yBank.current = yBank.current + speedRef.current;
          if (yBank.current === 64) {
            yPlayerIndex.current = yPlayerIndex.current - 1;
            yBank.current = 0;
          }
        }
      }
    }
    //if current key is s, the y cordinate becomes  the previous state - the speed

    if (dirArr.current[0] === 'ArrowDown') {
      if (
        currentMap[yPlayerIndex.current + 1][xPlayerIndex.current] === 0 ||
        yBank.current > 0
      ) {
        // if (xBank.current+32<64 || newMap[yPlayerIndex.current+1][xPlayerIndex.current+1]==0)
        if (
          xBank.current < 16 ||
          currentMap[yPlayerIndex.current][xPlayerIndex.current + 1] == 0
        ) {
          setYTransformVar((prevCount) => prevCount - speedRef.current);
          yBank.current = yBank.current - speedRef.current;
          if (yBank.current < 0) {
            yPlayerIndex.current = yPlayerIndex.current + 1;
            yBank.current = 60;
          }
        }
      }
    }
    requestRef.current = requestAnimationFrame(animate);
  };

  // Matt Birnholtz is going to go bald
  //every time the current key changes this runs
  useEffect(() => {
    if (dirArr.current[0]) {
      setWalker('true');
      if (
        dirArr.current[0] === 'ArrowRight' ||
        dirArr.current[0] === 'ArrowLeft' ||
        dirArr.current[0] === 'ArrowUp' ||
        dirArr.current[0] === 'ArrowDown'
      ) {
        requestRef.current = requestAnimationFrame(animate);
        return () => cancelAnimationFrame(requestRef.current);
      }
    }

    if (!dirArr.current[0]) {
      setWalker('false');
    }
  }, [tick]);

  //update the style for the mpa character by transforming it according the new x and y variables
  //map and character share the varaibles since they move together
  return (
    <div>
      <div className="camera fade-in">
        <div>
          <div
            className="mapSA pixel-art"
            style={{
              transform: `translate3d( ${xTransformVar}px, ${yTransformVar}px, 0 )`,
            }}
          >
            {gridArray}
            <div
              className="character pixel-art"
              facing={facing.current}
              walking={walker}
              style={{
                transform: `translate3d( ${600 - xTransformVar}px, ${
                  272 - yTransformVar
                }px, 0 )`,
              }}
            >
              <div className="character_spritesheet pixel-art"></div>
            </div>
          </div>
        </div>
        {textValue ? (
          <dialog className="textBox typewriter" open>
            <p>{textValue}</p>
          </dialog>
        ) : null}
      </div>
    </div>
  );
};

export default SaintAnna;
