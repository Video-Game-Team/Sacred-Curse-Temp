import React, { useEffect, useState, useRef } from 'react';
import LeftWalker from '../../assets/images/leftWalker.png';
import RightWalker from '../../assets/images/rightWalker.png';
import UpWalker from '../../assets/images/upWalker.png';
import DownWalker from '../../assets/images/downWalker.png';
import EmptyCanvas from '../../assets/images/newone.png';
import BackgroundImage1 from '../../assets/maps/map40x40wgrid.png';
import PlayerSpriteSheet from '../../assets/images/AjFP5.png';
import click1 from '../../audioclips/click1.mp3';

import text from '../../audioclips/Text.mp3';
import itemPickup from '../../audioclips/itemPickup.mp3';
import SnowMan from '../../audioclips/Snowman.mp3';
import Blurp from '../../audioclips/blurp 1.mp3';

import '../../tortous.css';

const Tortous = (props) => {
  //this sets the x Cordinate to transform the map and character location
  const [xTransformVar, setXTransformVar] = useState(-2776);
  //this sets the y Cordinate to transform the map and character location
  const [yTransformVar, setYTransformVar] = useState(-5588);

  const [xdogTransformVar, setXdogTransformVar] = useState(-2866);
  const [ydogTransformVar, setYdogTransformVar] = useState(-5088);

  const [xdemonTransformVar, setXdemonTransformVar] = useState(-2776);
  const [ydemonTransformVar, setYdemonTransformVar] = useState(-5444);

  const requestRef = useRef();
  const requestRef2 = useRef();
  const requestRef3 = useRef();

  const speedRef = useRef(4);
  const speedRef2 = useRef(1);

  const [tick, setTick] = useState(1);

  const facing = useRef();
  const npcfacing = useRef();

  const [walker, setWalker] = useState('false');
  const [npcwalking, setNpcWalking] = useState('false');

  const dirArr = useRef([]);
  const dirArrDemon = useRef([]);

  const xBank = useRef(0);
  const yBank = useRef(0);

  const xdemonBank = useRef(0);
  const ydemonBank = useRef(0);

  const yPlayerIndex = useRef(92);
  const xPlayerIndex = useRef(53);

  const ydogIndex = useRef(90);
  const xdogIndex = useRef(46);

  const ydemonIndex = useRef(90);
  const xdemonIndex = useRef(53);

  const yKeepIndex = useRef(90);
  const xKeepIndex = useRef(53);

  const [gridArray, setGridArray] = useState([]);
  const [textValue, setTextValue] = useState(null);

  const [npcFace, setNpcFace] = useState();

  // Sprtiesheet Toggle1 state
  const [toggle1, setToggle1] = useState(false);
  const [doorToggle1, setdoorToggle1] = useState(false);

  // Color Correction state
  const [saturate, setSaturate] = useState(100);
  const [hue, setHue] = useState(0);
  const [brightness, setBrightness] = useState(100);
  const [sepia, setSepia] = useState(0);
  const [contrast, setContrast] = useState(100);
  const [invert, setInvert] = useState([0]);

  //Demon Toggle state
  const [demonToggle1, demonSetToggle1] = useState(false);

  //Music Playing
  const clickAudio1 = () => new Audio(SnowMan).play();

  // //NPC Dialogue sound effect
  const clickAudio2 = () => new Audio(Blurp).play();

  // Item collection sound effect
  const clickAudio3 = () => new Audio(itemPickup).play();

  //Starts off Music Loop
  useEffect(() => {
    {
      clickAudio1();
    }
  }, []);

  // let currentMap = [
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  //   [
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  //     0, 0, 0, 0,
  //   ],
  // ];

  let currentMap = [
    [
      16479, 16480, 1227, 1228, 14142, 14140, 1227, 1228, 14140, 1227, 1228,
      14141, 1227, 1228, 14141, 1227, 1228, 14141, 1227, 1228, 14141, 1227,
      1228, 14141, 1227, 1228, 14141, 1227, 1228, 14141, 1227, 1228, 14141,
      1227, 1228, 14141, 1227, 1228, 14141, 862, 863, 14141, 862, 863, 14141,
      862, 863, 14141, 862, 863, 13379, 13380, 13381, 13379, 13380, 13381, 862,
      863, 14140, 862, 863, 14140, 862, 863, 14140, 862, 863, 14140, 1227, 1228,
      14140, 1227, 1228, 14140, 1227, 1228, 14140, 1227, 1228, 14140, 1227,
      1228, 14140, 1227, 1228, 14140, 1227, 1228, 14140, 1227, 1228, 14140,
      1227, 1228, 14140, 1227, 1228, 14140, 14141, 14142, 1227, 1228, 16479,
      16480,
    ],
    [
      16479, 16480, 1348, 1349, 14168, 14166, 1348, 1349, 14166, 1348, 1349,
      14167, 1348, 1349, 14167, 1348, 1349, 14167, 1348, 1349, 14167, 1348,
      1349, 14167, 1348, 1349, 14167, 1348, 1349, 14167, 1348, 1349, 14167,
      1348, 1349, 14167, 1348, 1349, 14167, 983, 984, 14167, 983, 984, 14167,
      983, 984, 14167, 983, 984, 13395, 13396, 13397, 13395, 13396, 13397, 983,
      984, 14166, 983, 984, 14166, 983, 984, 14166, 983, 984, 14166, 1348, 1349,
      14166, 1348, 1349, 14166, 1348, 1349, 14166, 1348, 1349, 14166, 1348,
      1349, 14166, 1348, 1349, 14166, 1348, 1349, 14166, 1348, 1349, 14166,
      1348, 1349, 14166, 1348, 1349, 14166, 14167, 14168, 1348, 1349, 16479,
      16480,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14192, 1469, 1470, 14193,
      1469, 1470, 14193, 1469, 1470, 14193, 1469, 1470, 14193, 1469, 1470,
      14193, 1469, 1470, 14193, 1469, 1470, 14193, 1469, 1470, 14193, 1469,
      1470, 14193, 1469, 1470, 14193, 1104, 1105, 14193, 1104, 1105, 14193,
      1104, 1105, 14193, 1104, 1105, 13411, 13412, 13413, 13411, 13412, 13413,
      1104, 1105, 14192, 1104, 1105, 14192, 1104, 1105, 14192, 1104, 1105,
      14192, 1469, 1470, 14192, 1469, 1470, 14192, 1469, 1470, 14192, 1469,
      1470, 14192, 1469, 1470, 14192, 1469, 1470, 14192, 1469, 1470, 14192,
      1469, 1470, 14192, 1469, 1470, 14192, 1469, 1470, 14192, 1227, 1228, 1469,
      1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14140, 1590, 1591, 14141,
      1590, 1591, 14141, 1590, 1591, 14141, 1590, 1591, 14141, 1590, 1591,
      14141, 1590, 1591, 14141, 1590, 1591, 14141, 1590, 1591, 14141, 1590,
      1591, 14141, 1590, 1591, 14141, 1225, 1226, 14141, 1225, 1226, 14141,
      1225, 1226, 14141, 1225, 1226, 13419, 13427, 13428, 13429, 13420, 13421,
      1225, 1226, 14140, 1225, 1226, 14140, 1225, 1226, 14140, 1225, 1226,
      14140, 1590, 1591, 14140, 1590, 1591, 14140, 1590, 1591, 14140, 1590,
      1591, 14140, 1590, 1591, 14140, 1590, 1591, 14140, 1590, 1591, 14140,
      1590, 1591, 14140, 1590, 1591, 14140, 1590, 1591, 14140, 1348, 1349, 1590,
      1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14166, 14167, 14166,
      14167, 14168, 14166, 14167, 14168, 14166, 14167, 14168, 14166, 14167,
      14168, 14166, 14167, 14168, 14166, 14167, 16506, 16506, 16506, 14168,
      14166, 14167, 14168, 14166, 14167, 14168, 14166, 14167, 14168, 14166,
      14167, 14168, 14166, 14167, 14168, 14166, 14167, 14168, 14166, 13435,
      13443, 13444, 13445, 13436, 13437, 14167, 14168, 14166, 14167, 14168,
      14166, 14167, 14168, 14166, 14167, 14168, 14166, 14167, 14168, 14166,
      14167, 14168, 14166, 14167, 14168, 14166, 14167, 14168, 14166, 14167,
      14168, 14166, 14167, 14168, 14166, 14167, 14168, 14166, 14167, 14168,
      14166, 14167, 14168, 14166, 1227, 1228, 14166, 1469, 1470, 1227, 1228,
      1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14192, 14193, 16506,
      16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506,
      16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506,
      16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506,
      16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 13451, 0,
      0, 0, 13452, 13453, 16506, 16506, 16506, 16506, 16506, 16506, 16506,
      16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506,
      16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506,
      16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506, 16506,
      16506, 14192, 1348, 1349, 14192, 1590, 1591, 1348, 1349, 1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14140, 14141, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 14140, 1469, 1470, 14140, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14166, 14167, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 14166, 1590, 1591, 14166, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14192, 14193, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 14192, 1227, 1228, 14192, 1469, 1470, 1227, 1228, 1104,
      1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14140, 14141, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 14140, 1348, 1349, 14140, 1590, 1591, 1348, 1349, 1225,
      1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14166, 14167, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 14166, 1469, 1470, 14166, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14192, 14193, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 14192, 1590, 1591, 14192, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14140, 14141, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878,
      2879, 2880, 2881, 2882, 2883, 2884, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      14140, 1227, 1228, 14140, 1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14166, 14167, 0, 0, 0, 0,
      14260, 14261, 14262, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14260, 14261, 14262, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 1605, 1606, 1607, 0, 0, 0, 2988, 2989, 2990, 2991, 2992, 2993, 2994,
      2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 14166, 1348, 1349, 14166, 1590, 1591, 1348,
      1349, 1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14192, 14193, 0, 0, 0, 0,
      14286, 14287, 14288, 14289, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 1367, 1368, 1369, 0, 0, 0, 14286, 14287, 14288, 14289,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1726, 1727, 1728, 0, 0, 0, 3109, 3110, 3111,
      3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123,
      3124, 3125, 3126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14192, 1469, 1470,
      14192, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14140, 14141, 0, 0, 0,
      14311, 14312, 14313, 14314, 14315, 0, 1189, 1190, 1191, 1192, 0, 1189,
      1190, 1191, 1192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1488, 1489, 1490, 0, 0,
      14311, 14312, 14313, 14314, 14315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1847, 1848,
      1849, 0, 0, 0, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239,
      3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 0, 0, 463, 464, 465, 466,
      467, 0, 0, 0, 0, 0, 14140, 1590, 1591, 14140, 1348, 1349, 1590, 1591, 983,
      984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14166, 14167, 0, 0, 0, 0,
      0, 14339, 14340, 0, 0, 1310, 1311, 1312, 1313, 0, 1310, 1311, 1312, 1313,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1609, 1610, 1611, 0, 0, 0, 0, 14339,
      14340, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3351, 3352, 3353,
      3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365,
      3366, 3367, 3368, 0, 0, 584, 585, 586, 587, 588, 589, 0, 0, 0, 0, 14166,
      1227, 1228, 14166, 1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14192, 14193, 0, 0, 0, 0,
      0, 14365, 14366, 0, 0, 1431, 1432, 1433, 1434, 0, 1431, 1432, 1433, 1434,
      0, 0, 0, 0, 14885, 14886, 14887, 0, 0, 0, 0, 1730, 1731, 1732, 0, 0, 0, 0,
      14365, 14366, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3472, 3473,
      3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485,
      3486, 3487, 3488, 3489, 0, 0, 705, 706, 707, 708, 709, 710, 0, 0, 0, 0,
      14192, 1348, 1349, 14192, 1590, 1591, 1348, 1349, 1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14140, 14141, 0, 0, 0, 0, 0,
      14391, 14392, 0, 0, 1552, 1553, 1554, 15585, 15586, 1552, 1553, 1554,
      1555, 0, 0, 0, 0, 14901, 14902, 14903, 0, 0, 0, 0, 1851, 1852, 1853, 0, 0,
      0, 0, 14391, 14392, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3593,
      3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605,
      3606, 3607, 3608, 3609, 3610, 0, 0, 0, 0, 828, 829, 830, 0, 0, 0, 0, 0,
      14140, 1469, 1470, 14140, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14166, 14167, 0, 0, 0, 0, 0,
      14417, 14418, 0, 0, 0, 0, 0, 15604, 15605, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14417, 14418, 0, 0, 0, 0, 0, 0, 0, 0,
      463, 464, 465, 466, 467, 0, 0, 0, 3714, 3715, 3716, 3717, 3718, 3719,
      3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 0,
      0, 0, 0, 949, 950, 951, 0, 0, 0, 0, 0, 14166, 1590, 1591, 14166, 1348,
      1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14192, 14193, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 584, 585, 586, 587,
      588, 589, 0, 0, 3835, 3836, 3837, 3838, 3839, 3840, 3841, 3842, 3843,
      3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 14192, 1227, 1228, 14192, 1469, 1470, 1227, 1228, 1104,
      1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14140, 14141, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 705, 706, 707, 708,
      709, 710, 0, 0, 3956, 4567, 3958, 3959, 3960, 3961, 3962, 3963, 3964,
      3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 14140, 1348, 1349, 14140, 1590, 1591, 1348, 1349, 1225,
      1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14166, 14167, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 826, 827, 828, 829, 830,
      0, 0, 0, 4077, 4567, 4568, 4569, 4570, 4571, 4083, 4084, 4085, 4086, 4087,
      4088, 4089, 4090, 4091, 4092, 4093, 4094, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 14166, 1469, 1470, 14166, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14192, 14193, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 948, 949, 950, 951, 0,
      0, 0, 4198, 4688, 4689, 4690, 4691, 4692, 4204, 4205, 0, 0, 4208, 4209,
      4210, 4211, 4212, 4213, 4214, 4215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      14192, 1590, 1591, 14192, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14140, 14141, 0, 0, 13907,
      13875, 13876, 13877, 13875, 13876, 13877, 13875, 13876, 13877, 13875,
      13876, 13877, 13875, 13876, 13877, 13875, 13876, 13877, 13875, 13876,
      13877, 13875, 13876, 13877, 13875, 13876, 13877, 13875, 13876, 13877,
      13875, 13876, 13877, 13875, 13876, 13877, 13875, 13876, 13877, 13911, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14140, 1227, 1228, 14140,
      1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14166, 14167, 0, 0, 13923,
      13891, 13892, 13893, 13891, 13892, 13893, 13891, 13892, 13893, 13891,
      13892, 13893, 13891, 13892, 13893, 13891, 13892, 13893, 13891, 13892,
      13893, 13891, 13892, 13893, 13891, 13892, 13893, 13891, 13892, 13893,
      13891, 13892, 13893, 13891, 13892, 13893, 13891, 13892, 13893, 13927, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14166, 1348, 1349, 14166,
      1590, 1591, 1348, 1349, 1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14192, 14193, 0, 0, 13939,
      0, 1480, 0, 1480, 4147, 4148, 0, 0, 0, 13753, 1480, 0, 0, 0, 0, 0, 0,
      1601, 1480, 0, 0, 0, 1480, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1601, 0, 1480, 0,
      0, 0, 13943, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14192,
      1469, 1470, 14192, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14140, 14141, 0, 0, 13923,
      0, 1601, 0, 1601, 4268, 4269, 0, 0, 1480, 0, 1601, 1480, 0, 4147, 4148, 0,
      0, 0, 1601, 0, 0, 0, 1601, 13769, 0, 4990, 4991, 4992, 1480, 0, 1480,
      1480, 0, 15930, 15931, 1601, 0, 0, 0, 13927, 0, 0, 0, 0, 0, 0, 0, 8008,
      8009, 8010, 0, 739, 740, 740, 740, 740, 740, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14140, 1590, 1591, 14140, 1348,
      1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14166, 14167, 0, 0, 13939,
      0, 1480, 2202, 2203, 4389, 4390, 0, 0, 1601, 0, 0, 1601, 0, 4268, 4269, 0,
      13770, 0, 0, 2807, 2808, 2809, 0, 0, 0, 1480, 0, 0, 1601, 0, 1601, 1601,
      0, 15948, 15949, 0, 0, 0, 0, 13943, 0, 0, 0, 0, 0, 0, 0, 8129, 8130, 8131,
      0, 860, 861, 16015, 16016, 861, 740, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 15751, 15752, 0, 0, 0, 0, 14166, 1227, 1228, 14166,
      1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14192, 14193, 0, 0, 13923,
      0, 1601, 2323, 2324, 0, 1480, 0, 0, 0, 0, 0, 0, 0, 4389, 4390, 1480, 0, 0,
      0, 2928, 2929, 2930, 0, 0, 0, 2565, 2566, 2567, 0, 1480, 0, 0, 0, 15966,
      15967, 1480, 2202, 2203, 0, 13927, 0, 0, 0, 0, 0, 8242, 8243, 8250, 8251,
      0, 0, 860, 860, 16033, 16034, 861, 740, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 15770, 15771, 0, 0, 0, 0, 14192, 1348, 1349, 14192,
      1590, 1591, 1348, 1349, 1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14140, 14141, 0, 0, 13939,
      0, 0, 0, 0, 0, 1601, 1480, 0, 0, 1480, 13769, 0, 0, 1601, 0, 1601, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 2686, 2687, 2688, 0, 1601, 0, 0, 0, 0, 0, 1601, 2323,
      2324, 13753, 13943, 0, 0, 0, 0, 0, 8363, 8364, 8371, 8372, 0, 0, 860, 861,
      4392, 4393, 861, 740, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 14140, 1469, 1470, 14140, 1227, 1228, 1469, 1470,
      862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14166, 14167, 0, 0, 13955,
      13875, 13876, 13877, 13875, 13876, 13877, 13875, 13876, 13877, 13875,
      13876, 13877, 13875, 13876, 13877, 13875, 13876, 13877, 13875, 13876,
      13877, 13875, 13876, 13877, 13875, 13876, 13877, 13875, 13876, 13877,
      13875, 13876, 13877, 13875, 13876, 13877, 13875, 13876, 13877, 13959, 0,
      0, 0, 0, 0, 8484, 8485, 8492, 8493, 8494, 0, 860, 861, 860, 860, 861, 740,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      14166, 1590, 1591, 14166, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14192, 14193, 0, 0, 13971,
      13891, 13892, 13893, 13891, 13892, 13893, 13891, 13892, 13893, 13891,
      13892, 13893, 13891, 13892, 13893, 13891, 13892, 13893, 13891, 13892,
      13893, 13891, 13892, 13893, 13891, 13892, 13893, 13891, 13892, 13893,
      13891, 13892, 13893, 13891, 13892, 13893, 13891, 13892, 13893, 13975, 0,
      0, 0, 0, 0, 0, 0, 8613, 8614, 8615, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14192, 1227, 1228,
      14192, 1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14140, 14141, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 14140, 1348, 1349, 14140, 1590, 1591, 1348, 1349, 1225,
      1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14166, 14167, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 14166, 1469, 1470, 14166, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14192, 14193, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 14192, 1590, 1591, 14192, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14140, 14141, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 14140, 1227, 1228, 14140, 1469, 1470, 1227, 1228, 1104,
      1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14166, 14167, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 14166, 1348, 1349, 14166, 1590, 1591, 1348, 1349, 1225,
      1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14192, 14193, 0, 0, 0, 0, 0,
      6971, 6972, 6973, 6974, 6975, 6976, 0, 0, 0, 6971, 6972, 6973, 6974, 6975,
      6976, 0, 0, 0, 6971, 6972, 6973, 6974, 6975, 6976, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6971, 6972,
      6973, 6974, 6975, 6976, 0, 0, 6971, 6972, 6973, 6974, 6975, 6976, 0, 0,
      6971, 6972, 6973, 6974, 6975, 6976, 0, 0, 0, 0, 14192, 1469, 1470, 14192,
      1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14140, 14141, 0, 0, 0, 0, 0,
      7092, 7093, 7094, 7095, 7096, 7097, 0, 0, 0, 7092, 7093, 7094, 7095, 7096,
      7097, 0, 0, 0, 7092, 7093, 7094, 7095, 7096, 7097, 0, 0, 15120, 15121, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15120, 15121, 0,
      0, 0, 7092, 7093, 7094, 7095, 7096, 7097, 0, 0, 7092, 7093, 7094, 7095,
      7096, 7097, 0, 0, 7092, 7093, 7094, 7095, 7096, 7097, 0, 0, 0, 0, 14140,
      1590, 1591, 14140, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14166, 14167, 0, 0, 0, 0,
      0, 7213, 7214, 7215, 7216, 7217, 7218, 0, 0, 0, 7213, 7214, 7215, 7216,
      7217, 7218, 0, 0, 0, 7213, 7214, 7215, 7216, 7217, 7218, 0, 0, 15139,
      15140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15139,
      15140, 0, 0, 0, 7213, 7214, 7215, 7216, 7217, 7218, 0, 0, 7213, 7214,
      7215, 7216, 7217, 7218, 0, 0, 7213, 7214, 7215, 7216, 7217, 7218, 0, 0, 0,
      0, 14166, 1227, 1228, 14166, 1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14192, 14193, 0, 0, 0, 0,
      0, 7334, 7335, 7336, 7337, 7338, 7339, 0, 0, 0, 7334, 7335, 7336, 7337,
      7338, 7339, 0, 0, 0, 7334, 7335, 7336, 7337, 7338, 7339, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 513, 0, 512, 513, 0, 0, 0, 0, 0,
      0, 7334, 7335, 7336, 7337, 7338, 7339, 0, 0, 7334, 7335, 7336, 7337, 7338,
      7339, 0, 0, 7334, 7335, 7336, 7337, 7338, 7339, 0, 0, 0, 0, 14192, 1348,
      1349, 14192, 1590, 1591, 1348, 1349, 1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14140, 14141, 0, 0, 0, 0, 0,
      7455, 7456, 7457, 7458, 7459, 7460, 0, 0, 0, 7455, 7456, 7457, 7458, 7459,
      7460, 0, 0, 0, 7455, 7456, 7457, 7458, 7459, 7460, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 633, 634, 0, 633, 634, 0, 0, 0, 0, 0, 0,
      7455, 7456, 7457, 7458, 7459, 7460, 0, 0, 7455, 7456, 7457, 7458, 7459,
      7460, 0, 0, 7455, 7456, 7457, 7458, 7459, 7460, 0, 0, 0, 0, 14140, 1469,
      1470, 14140, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14166, 14167, 0, 0, 0, 0, 0,
      7576, 7577, 7578, 7579, 7580, 7581, 0, 0, 0, 7576, 7577, 7578, 7579, 7580,
      7581, 0, 0, 0, 7576, 7577, 7578, 7579, 7580, 7581, 0, 0, 0, 0, 0, 4243,
      4244, 4245, 4246, 4247, 4248, 4243, 4244, 4245, 15120, 15121, 4248, 0,
      754, 755, 0, 754, 755, 0, 0, 0, 0, 0, 0, 7576, 7577, 7578, 7579, 7580,
      7581, 0, 0, 7576, 7577, 7578, 7579, 7580, 7581, 0, 0, 7576, 7577, 7578,
      7579, 7580, 7581, 0, 0, 0, 0, 14166, 1590, 1591, 14166, 1348, 1349, 1590,
      1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14192, 14193, 0, 0, 0, 0,
      0, 7697, 7698, 7699, 7700, 7701, 7702, 0, 0, 0, 7697, 7698, 7699, 7700,
      7701, 7702, 0, 0, 0, 7697, 7698, 7699, 7700, 7701, 7702, 0, 0, 0, 0, 0,
      4364, 4365, 4366, 4367, 4368, 4369, 4364, 4365, 4366, 15139, 15140, 4369,
      0, 875, 876, 0, 875, 876, 0, 0, 0, 0, 0, 0, 7697, 7698, 7699, 7700, 7701,
      7702, 0, 0, 7697, 7698, 7699, 7700, 7701, 7702, 0, 0, 7697, 7698, 7699,
      7700, 7701, 7702, 0, 0, 0, 0, 14192, 1227, 1228, 14192, 1469, 1470, 1227,
      1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14140, 14141, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15257, 15258, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 4485, 4486, 4487, 4488, 4489, 4490, 4485, 4486,
      4487, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 14140, 1348, 1349, 14140, 1590, 1591, 1348, 1349, 1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14166, 14167, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15276, 15277, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 4606, 4607, 4608, 4609, 4610, 4611, 4606, 4607, 4608,
      4609, 4610, 4611, 4612, 4613, 4614, 4615, 4616, 4617, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      14166, 1469, 1470, 14166, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14192, 14193, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 4727, 4728, 4729, 4730, 4731, 4732, 4727, 4728, 4729, 4730,
      4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      14192, 1590, 1591, 14192, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14140, 14141, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 4848, 4849, 4850, 4851, 4852, 4853, 4848, 4849, 4850, 4851,
      4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      14140, 1227, 1228, 14140, 1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14166, 14167, 0, 0, 0, 0,
      0, 0, 872, 873, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 4969, 4970, 4971, 4972, 4973, 4974, 4969, 4970, 4971,
      4972, 4973, 4974, 4975, 4976, 4977, 4978, 4979, 4980, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 872, 873, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 14166, 1348, 1349, 14166, 1590, 1591, 1348, 1349, 1225, 1226,
    ],
    [
      16479, 16480, 1469, 1470, 1227, 1228, 1469, 1470, 14192, 14193, 0, 0, 0,
      0, 0, 992, 993, 994, 0, 0, 0, 0, 0, 0, 0, 0, 872, 873, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5090, 5091, 5092, 5093, 5094, 5095, 5090,
      5091, 5092, 5093, 5094, 5095, 5096, 5097, 5098, 5099, 5100, 5101, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 992, 993, 994, 0, 0, 0, 0, 0, 0, 872,
      873, 0, 0, 0, 0, 0, 0, 14192, 1469, 1470, 14192, 1227, 1228, 1469, 1470,
      862, 863,
    ],
    [
      16801, 16801, 16801, 16801, 16801, 16801, 16801, 16801, 16801, 16787, 0,
      0, 0, 0, 0, 1113, 1114, 1115, 0, 0, 0, 0, 0, 0, 0, 992, 993, 994, 0, 0, 0,
      0, 9163, 9164, 9165, 9166, 9167, 9168, 9169, 0, 0, 0, 0, 0, 5211, 5212,
      5213, 5214, 5215, 5216, 5211, 5212, 5213, 5214, 5215, 5216, 5217, 5218,
      5219, 5220, 5221, 5222, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1113,
      1114, 1115, 0, 0, 0, 0, 0, 992, 993, 994, 0, 0, 0, 0, 0, 0, 14140, 1590,
      1591, 14140, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      16817, 16817, 16817, 16817, 16817, 16817, 16817, 16817, 16817, 16817, 0,
      0, 0, 0, 0, 0, 1235, 0, 0, 0, 0, 0, 0, 0, 0, 1113, 1114, 1115, 0, 0, 0, 0,
      9284, 9285, 9286, 9287, 9288, 9289, 9290, 0, 0, 0, 0, 0, 5332, 5333, 5334,
      5335, 5336, 5337, 5332, 5333, 5334, 5335, 5336, 5337, 5338, 5339, 5340,
      5341, 5342, 5343, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1235, 0,
      0, 0, 0, 0, 0, 1113, 1114, 1115, 0, 0, 0, 0, 0, 0, 14166, 14167, 14168,
      14166, 1469, 1470, 14166, 14167, 1104, 1105,
    ],
    [
      16900, 16900, 16901, 16902, 16900, 16901, 16900, 16901, 16902, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1235, 0, 0, 0, 0, 0, 9405, 9406,
      9407, 9408, 9409, 9410, 9411, 0, 0, 0, 0, 0, 5453, 5454, 5455, 5456, 5457,
      5458, 5453, 5454, 5455, 5456, 5457, 5458, 5459, 5460, 5461, 5462, 5463,
      5464, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 1235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ],
    [
      862, 863, 16917, 16918, 862, 863, 16916, 16917, 16918, 0, 0, 0, 0, 0, 0,
      16506, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9526, 9527, 9528,
      9529, 9530, 9531, 9532, 0, 0, 0, 0, 0, 5574, 5575, 5576, 5577, 5578, 5579,
      5574, 0, 5576, 5577, 5578, 5579, 5580, 5581, 5582, 5583, 5584, 5585, 0, 0,
      0, 0, 0, 0, 7268, 7269, 7270, 7271, 7272, 7273, 9261, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17097, 17097, 17097, 1227, 1228,
      17097, 17097, 1227, 1228,
    ],
    [
      983, 984, 16933, 16934, 983, 984, 16932, 16933, 16934, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 872, 873, 0, 0, 0, 0, 9647, 9648, 9649,
      9650, 9651, 9652, 9653, 0, 0, 0, 0, 15120, 15121, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 15120, 15121, 0, 0, 0, 0, 0, 7389, 7390, 7391,
      7392, 7393, 7394, 9382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 1348, 1349, 0, 0, 1348, 1349,
    ],
    [
      1104, 1105, 1227, 1228, 1104, 1105, 1227, 1228, 14192, 14193, 0, 0, 0, 0,
      0, 0, 0, 872, 873, 0, 0, 0, 0, 0, 0, 992, 993, 994, 0, 0, 0, 0, 9768,
      9769, 9770, 9771, 9772, 9773, 9774, 0, 0, 0, 0, 15139, 15140, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15139, 15140, 0, 0, 0, 0, 0, 7510,
      7511, 7512, 7513, 0, 0, 9503, 0, 0, 0, 872, 873, 0, 0, 0, 0, 0, 0, 0, 872,
      873, 0, 0, 0, 0, 0, 14192, 1227, 1228, 14192, 1469, 1470, 1227, 1228,
      1469, 1470,
    ],
    [
      1225, 1226, 1348, 1349, 1225, 1226, 1348, 1349, 14140, 14141, 0, 0, 0, 0,
      0, 0, 992, 993, 994, 0, 0, 0, 0, 0, 0, 1113, 1114, 1115, 0, 0, 0, 0, 9889,
      9890, 9891, 9892, 9893, 9894, 9895, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7631, 7632, 7633, 7634,
      7635, 7636, 0, 0, 0, 992, 993, 994, 0, 0, 0, 0, 0, 0, 992, 993, 994, 0, 0,
      0, 0, 0, 14140, 1348, 1349, 14140, 1590, 1591, 1348, 1349, 1590, 1591,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14166, 14167, 0, 0, 0, 0, 0,
      0, 1113, 1114, 1115, 0, 0, 0, 0, 0, 0, 0, 1235, 0, 0, 0, 0, 0, 10010,
      10011, 10012, 10013, 10014, 10015, 10016, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15443, 15444, 8236, 8237,
      8238, 8239, 8240, 8241, 0, 0, 0, 1113, 1114, 1115, 0, 0, 0, 0, 0, 0, 1113,
      1114, 1115, 0, 0, 0, 0, 0, 14166, 1469, 1470, 14166, 1227, 1228, 1469,
      1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14192, 14193, 0, 0, 0, 0, 0,
      0, 0, 1235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10131, 10132, 10133,
      10134, 10135, 10136, 10137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15462, 15463, 8357, 8358, 8359, 8360,
      8361, 8362, 0, 0, 0, 0, 1235, 0, 0, 0, 0, 0, 0, 0, 0, 1235, 0, 0, 0, 0, 0,
      0, 14192, 1590, 1591, 14192, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14140, 14141, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 8478, 8479, 8480, 8481, 8482, 8483, 9987, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14140, 1227, 1228, 14140, 1469, 1470,
      1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14166, 14167, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 14166, 1348, 1349, 14166, 1590, 1591, 1348, 1349, 1225,
      1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14192, 14193, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12960,
      12973, 12974, 0, 0, 0, 0, 0, 14192, 1469, 1470, 14192, 1227, 1228, 1469,
      1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14140, 14141, 0, 0, 0, 0, 0,
      0, 6971, 6972, 6973, 6974, 6975, 6976, 0, 6971, 6972, 6973, 6974, 6975,
      6976, 0, 6971, 6972, 6973, 6974, 6975, 6976, 0, 6971, 6972, 6973, 6974,
      6975, 6976, 0, 6971, 6972, 6973, 6974, 6975, 6976, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 12987, 12976, 12989, 12990, 12991, 0, 0, 0, 0, 14140, 1590, 1591,
      14140, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14166, 14167, 0, 0, 0, 0,
      0, 0, 7092, 7093, 7094, 7095, 7096, 7097, 0, 7092, 7093, 7094, 7095, 7096,
      7097, 0, 7092, 7093, 7094, 7095, 7096, 7097, 0, 7092, 7093, 7094, 7095,
      7096, 7097, 0, 7092, 7093, 7094, 7095, 7096, 7097, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13468,
      13469, 13469, 14659, 14660, 13003, 13004, 13005, 13006, 13007, 13471, 0,
      0, 0, 14166, 1227, 1228, 14166, 1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14192, 14193, 0, 0, 0, 0,
      0, 0, 7213, 7214, 7215, 7216, 7217, 7218, 0, 7213, 7214, 7215, 7216, 7217,
      7218, 0, 7213, 7214, 7215, 7216, 7217, 7218, 0, 7213, 7214, 7215, 7216,
      7217, 7218, 0, 7213, 7214, 7215, 7216, 7217, 7218, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 276, 277, 0, 276, 277, 0, 276, 277, 0, 276, 277, 0, 276,
      277, 0, 0, 13515, 14166, 14166, 14675, 14676, 13019, 13020, 13021, 13022,
      13023, 13515, 0, 0, 0, 14192, 1348, 1349, 14192, 1590, 1591, 1348, 1349,
      1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14140, 14141, 0, 0, 0, 0, 0,
      0, 7334, 7335, 7336, 7337, 7338, 7339, 0, 7334, 7335, 7336, 7337, 7338,
      7339, 0, 7334, 7335, 7336, 7337, 7338, 7339, 0, 7334, 7335, 7336, 7337,
      7338, 7339, 0, 7334, 7335, 7336, 7337, 7338, 7339, 0, 0, 0, 0, 0, 0, 0,
      398, 399, 400, 398, 399, 400, 512, 513, 512, 513, 512, 513, 512, 513, 512,
      513, 512, 513, 512, 513, 512, 513, 0, 13515, 4990, 4991, 4992, 14192,
      13035, 13036, 13037, 13038, 13039, 13515, 0, 0, 0, 14140, 1469, 1470,
      14140, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14166, 14167, 0, 0, 0, 0, 0,
      0, 7455, 7456, 7457, 7458, 7459, 7460, 0, 7455, 7456, 7457, 7458, 7459,
      7460, 0, 7455, 7456, 7457, 7458, 7459, 7460, 0, 7455, 7456, 7457, 7458,
      7459, 7460, 0, 7455, 7456, 7457, 7458, 7459, 7460, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 633, 634, 633, 634, 633, 634, 633, 634, 633, 634, 633, 634,
      633, 634, 633, 634, 0, 13515, 14141, 14142, 13575, 13576, 13051, 12983,
      12984, 12985, 13055, 13515, 0, 0, 0, 14166, 1590, 1591, 14166, 1348, 1349,
      1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14192, 14193, 0, 0, 0, 0,
      0, 0, 7576, 7577, 7578, 7579, 7580, 7581, 0, 7576, 7577, 7578, 7579, 7580,
      7581, 0, 7576, 7577, 7578, 7579, 7580, 7581, 0, 7576, 7577, 7578, 7579,
      7580, 7581, 0, 7576, 7577, 7578, 7579, 7580, 7581, 0, 0, 0, 0, 0, 0, 0,
      395, 396, 397, 398, 399, 400, 754, 755, 754, 755, 754, 755, 754, 755, 754,
      755, 754, 755, 754, 755, 754, 755, 0, 13515, 13735, 14168, 13591, 13592,
      13067, 12999, 13000, 13001, 13071, 13515, 0, 0, 0, 14192, 1227, 1228,
      14192, 1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14140, 14141, 0, 0, 0, 0,
      0, 0, 7697, 7698, 7699, 7700, 7701, 7702, 0, 7697, 7698, 7699, 7700, 7701,
      7702, 0, 7697, 7698, 7699, 7700, 7701, 7702, 0, 7697, 7698, 7699, 7700,
      7701, 7702, 0, 7697, 7698, 7699, 7700, 7701, 7702, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 875, 876, 875, 876, 875, 876, 875, 876, 875, 876, 875, 876,
      875, 876, 875, 876, 0, 13468, 13469, 13469, 13469, 13469, 13083, 13084,
      13085, 0, 13087, 13471, 0, 0, 0, 14140, 1348, 1349, 14140, 1590, 1591,
      1348, 1349, 1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14166, 14167, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 14166, 1469, 1470, 14166, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14192, 14193, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 14192, 1590, 1591, 14192, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14140, 14141, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 14140, 1227, 1228, 14140, 1469, 1470, 1227, 1228, 1104,
      1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14166, 14167, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4733, 4734, 4735,
      4736, 4737, 4738, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14166, 1348, 1349, 14166, 1590, 1591,
      1348, 1349, 1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14192, 14193, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 6971, 6972, 6973, 6974, 6975, 6976, 0, 6971, 6972,
      6973, 6974, 6975, 6976, 0, 6971, 6972, 6973, 6974, 6975, 0, 0, 6971, 6972,
      6973, 6974, 6975, 6976, 0, 0, 0, 0, 0, 0, 0, 4854, 4855, 4856, 4857, 4858,
      4859, 0, 6971, 6972, 6973, 6974, 6975, 6976, 0, 6971, 6972, 6973, 6974,
      6975, 6976, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14192,
      1469, 1470, 14192, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14140, 14141, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 7092, 7093, 7094, 7095, 7096, 7097, 0, 7092, 7093,
      7094, 7095, 7096, 7097, 0, 7092, 7093, 7094, 7095, 7096, 7097, 0, 7092,
      7093, 7094, 7095, 7096, 7097, 0, 0, 0, 0, 0, 0, 0, 4975, 4976, 4977, 4978,
      4979, 4980, 0, 7092, 7093, 7094, 7095, 7096, 7097, 0, 7092, 7093, 7094,
      7095, 7096, 7097, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      14140, 1590, 1591, 14140, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14166, 14167, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 7213, 7214, 7215, 7216, 7217, 7218, 0, 7213,
      7214, 7215, 7216, 7217, 7218, 0, 7213, 7214, 7215, 7216, 7217, 7218, 0,
      7213, 7214, 7215, 7216, 7217, 7218, 0, 0, 0, 0, 0, 0, 0, 5096, 5097, 5098,
      5099, 5100, 5101, 0, 7213, 7214, 7215, 7216, 7217, 7218, 0, 7213, 7214,
      7215, 7216, 7217, 7218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      14166, 1227, 1228, 14166, 1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14192, 14193, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 7334, 7335, 7336, 7337, 7338, 7339, 0, 7334,
      7335, 7336, 7337, 7338, 7339, 0, 7334, 7335, 7336, 7337, 7338, 7339, 0,
      7334, 7335, 7336, 7337, 7338, 7339, 0, 0, 0, 0, 0, 0, 0, 5217, 5218, 5219,
      5220, 5221, 5222, 0, 7334, 7335, 7336, 7337, 7338, 7339, 0, 7334, 7335,
      7336, 7337, 7338, 7339, 7340, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 14192, 1348, 1349, 14192, 1590, 1591, 1348, 1349, 1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14140, 14141, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 7455, 7456, 7457, 7458, 7459, 7460, 0, 7455, 7456,
      7457, 7458, 7459, 7460, 0, 7455, 7456, 7457, 7458, 7459, 7460, 0, 7455,
      7456, 7457, 7458, 7459, 7460, 0, 0, 0, 0, 0, 0, 0, 5338, 5339, 5340, 5341,
      5342, 5343, 0, 7455, 7456, 7457, 7458, 7459, 7460, 0, 7455, 7456, 7457,
      7458, 7459, 7460, 0, 0, 2116, 2117, 2118, 2119, 2120, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 14140, 1469, 1470, 14140, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14166, 14167, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 7576, 7577, 7578, 7579, 7580, 7581, 0, 7576, 7577,
      7578, 7579, 7580, 7581, 0, 7576, 7577, 7578, 7579, 7580, 7581, 0, 7576,
      7577, 7578, 7579, 7580, 7581, 0, 0, 0, 0, 0, 0, 0, 5459, 5460, 5461, 5462,
      5463, 5464, 0, 7576, 7577, 7578, 7579, 7580, 7581, 0, 7576, 7577, 7578,
      7579, 7580, 7581, 0, 0, 2237, 2238, 2239, 2240, 2241, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 14166, 1590, 1591, 14166, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14192, 14193, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 7697, 7698, 7699, 7700, 7701, 7702, 0, 7697,
      7698, 7699, 7700, 7701, 7702, 0, 7697, 0, 0, 7700, 7701, 7702, 0, 7697,
      7698, 7699, 7700, 7701, 7702, 0, 0, 0, 0, 0, 0, 0, 5580, 5581, 5582, 5583,
      5584, 5585, 0, 7697, 7698, 7699, 7700, 7701, 7702, 0, 7697, 7698, 7699,
      7700, 7701, 7702, 0, 0, 2358, 2359, 2360, 2361, 2362, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 14192, 1227, 1228, 14192, 1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14140, 14141, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15272, 15273, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 14140, 1348, 1349, 14140, 1590, 1591, 1348, 1349,
      1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14166, 14167, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 15291, 15292, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 14166, 1469, 1470, 14166, 1227, 1228, 1469, 1470,
      862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14192, 14193, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 14192, 1590, 1591, 14192, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14140, 14141, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 1041, 1042, 1043, 1044, 0, 1041, 1042, 1043, 1044, 0,
      1045, 1046, 1047, 1048, 0, 1041, 1042, 1043, 1044, 0, 1045, 1046, 1047,
      1048, 0, 1045, 1046, 1047, 1048, 0, 0, 0, 0, 0, 0, 0, 1041, 1042, 1043,
      1044, 0, 1041, 1042, 1043, 1044, 0, 1041, 1042, 1043, 1044, 0, 1045, 1046,
      1047, 1048, 0, 1041, 1042, 1043, 1044, 0, 1041, 1042, 1043, 1044, 0, 0, 0,
      0, 0, 0, 0, 0, 14140, 1227, 1228, 14140, 1469, 1470, 1227, 1228, 1104,
      1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14166, 14167, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 1162, 1163, 1164, 1165, 0, 1162, 1163, 1164, 1165, 0,
      1166, 1167, 1168, 1169, 0, 1162, 1163, 1164, 1165, 0, 1166, 1167, 1168,
      1169, 0, 1166, 1167, 1168, 1169, 0, 0, 0, 0, 0, 0, 0, 1162, 1163, 1164,
      1165, 0, 1162, 1163, 1164, 1165, 0, 1162, 1163, 1164, 1165, 0, 1166, 1167,
      1168, 1169, 0, 1162, 1163, 1164, 1165, 0, 1162, 1163, 1164, 1165, 0, 0, 0,
      0, 0, 0, 0, 0, 14166, 1348, 1349, 14166, 1590, 1591, 1348, 1349, 1225,
      1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14192, 14193, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 1283, 1284, 1285, 1286, 0, 1283, 1284, 1285, 1286, 0,
      1287, 1288, 1289, 1290, 0, 1283, 1284, 1285, 1286, 0, 1287, 1288, 1289,
      1290, 0, 1287, 1288, 1289, 1290, 0, 0, 0, 0, 0, 0, 0, 1283, 1284, 1285,
      1286, 0, 1283, 1284, 1285, 1286, 0, 1283, 1284, 1285, 1286, 0, 1287, 1288,
      1289, 1290, 0, 1283, 1284, 1285, 1286, 0, 1283, 1284, 1285, 1286, 0, 0,
      15267, 15268, 0, 0, 0, 0, 14192, 1469, 1470, 14192, 1227, 1228, 1469,
      1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14140, 14141, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 1404, 1405, 1406, 1407, 0, 1404, 1405, 1406, 1407, 0,
      1408, 1409, 1410, 1411, 0, 1404, 1405, 1406, 1407, 0, 1408, 1409, 1410,
      1411, 0, 1408, 1409, 1410, 1411, 0, 0, 0, 0, 0, 0, 0, 1404, 1405, 1406,
      1407, 0, 1404, 1405, 1406, 1407, 0, 1404, 1405, 1406, 1407, 0, 1408, 1409,
      1410, 1411, 0, 1404, 1405, 1406, 1407, 0, 1404, 1405, 1406, 1407, 0, 0,
      15286, 15287, 0, 0, 0, 0, 14140, 1590, 1591, 14140, 1348, 1349, 1590,
      1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 1227, 1228, 14166, 14167, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 1525, 1526, 1527, 1528, 0, 1525, 1526, 1527, 1528, 0,
      1529, 1530, 0, 1532, 0, 1525, 1526, 1527, 1528, 0, 1529, 1530, 1531, 1532,
      0, 1529, 1530, 1531, 1532, 0, 0, 0, 0, 0, 0, 0, 1525, 1526, 1527, 1528, 0,
      1525, 1526, 0, 1528, 0, 1525, 1526, 1527, 1528, 0, 1529, 1530, 1531, 1532,
      0, 1525, 1526, 1527, 1528, 0, 1525, 1526, 0, 1528, 0, 0, 0, 0, 0, 0, 0, 0,
      14166, 1227, 1228, 14166, 1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 1590, 1591, 1348, 1349, 14192, 14193, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 14192, 1348, 1349, 14192, 1590, 1591, 1348, 1349, 1225,
      1226,
    ],
    [
      862, 863, 1469, 1470, 1227, 1228, 1469, 1470, 14140, 14141, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 14140, 1469, 1470, 14140, 1227, 1228, 1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1348, 1349, 1590, 1591, 14166, 14167, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 14166, 1590, 1591, 14166, 1348, 1349, 1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1469, 1470, 14193, 1227, 1228, 14193, 1227, 1228,
      14142, 1227, 1228, 14142, 1227, 1228, 14142, 1227, 1228, 14142, 1227,
      1228, 14142, 1227, 1228, 14142, 1227, 1228, 14142, 1227, 1228, 14142,
      1227, 1228, 14142, 1227, 1228, 14142, 1227, 1228, 14142, 862, 863, 14142,
      14140, 862, 863, 14140, 14141, 16506, 0, 0, 0, 16506, 14140, 14141, 14142,
      862, 863, 862, 863, 14141, 1227, 1228, 14141, 1227, 1228, 14141, 1227,
      1228, 14141, 1227, 1228, 14141, 1227, 1228, 14141, 1227, 1228, 14141,
      1227, 1228, 14141, 1227, 1228, 14141, 1227, 1228, 14141, 1227, 1228,
      14141, 1227, 1228, 14194, 14192, 1469, 1470, 1227, 1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 862, 863, 14141, 1348, 1349, 14141, 1348, 1349,
      14168, 1348, 1349, 14168, 1348, 1349, 14168, 1348, 1349, 14168, 1348,
      1349, 14168, 1348, 1349, 14168, 1348, 1349, 14168, 1348, 1349, 14168,
      1348, 1349, 14168, 1348, 1349, 14168, 1348, 1349, 14168, 983, 984, 14168,
      14166, 983, 984, 16254, 16255, 16256, 0, 0, 0, 16254, 16255, 16256, 14168,
      983, 984, 983, 984, 14167, 1348, 1349, 14167, 1348, 1349, 14167, 1348,
      1349, 14167, 1348, 1349, 14167, 1348, 1349, 14167, 1348, 1349, 14167,
      1348, 1349, 14167, 1348, 1349, 14167, 1348, 1349, 14167, 1348, 1349,
      14167, 1348, 1349, 14142, 14140, 1590, 1591, 1348, 1349, 1225, 1226,
    ],
    [
      862, 863, 1469, 1470, 983, 984, 14167, 1469, 1470, 14167, 1469, 1470,
      14194, 1469, 1470, 14194, 1469, 1470, 14194, 1469, 1470, 14194, 1469,
      1470, 14194, 1469, 1470, 14194, 1469, 1470, 14194, 1469, 1470, 14194,
      1469, 1470, 14194, 1469, 1470, 14194, 1469, 1470, 14194, 1104, 1105,
      14194, 14192, 1104, 1105, 16262, 16263, 16264, 16262, 16263, 16264, 16262,
      16263, 16264, 14194, 1104, 1105, 1104, 1105, 14193, 1469, 1470, 14193,
      1469, 1470, 14193, 1469, 1470, 14193, 1469, 1470, 14193, 1469, 1470,
      14193, 1469, 1470, 14193, 1469, 1470, 14193, 1469, 1470, 14193, 1469,
      1470, 14193, 1469, 1470, 14193, 1469, 1470, 14168, 14166, 1227, 1228,
      1469, 1470, 862, 863,
    ],
    [
      983, 984, 1590, 1591, 1104, 1105, 14193, 1590, 1591, 14193, 1590, 1591,
      14142, 1590, 1591, 14142, 1590, 1591, 14142, 1590, 1591, 14142, 1590,
      1591, 14142, 1590, 1591, 14142, 1590, 1591, 14142, 1590, 1591, 14142,
      1590, 1591, 14142, 1590, 1591, 14142, 1590, 1591, 14142, 1225, 1226,
      14142, 14140, 1225, 1226, 16270, 16271, 16272, 16270, 16271, 16272, 16270,
      16271, 16272, 14142, 1225, 1226, 1225, 1226, 14141, 1590, 1591, 14141,
      1590, 1591, 14141, 1590, 1591, 14141, 1590, 1591, 14141, 1590, 1591,
      14141, 1590, 1591, 14141, 1590, 1591, 14141, 1590, 1591, 14141, 1590,
      1591, 14141, 1590, 1591, 14141, 1590, 1591, 14194, 14192, 1348, 1349,
      1590, 1591, 983, 984,
    ],
    [
      1104, 1105, 1227, 1228, 1225, 1226, 1228, 14142, 1227, 1228, 14140, 1227,
      1228, 14140, 1227, 1228, 14140, 1227, 1228, 14140, 1227, 1228, 14140,
      1227, 1228, 14140, 1227, 1228, 14140, 1227, 1228, 14140, 1227, 1228,
      14140, 1227, 1228, 14140, 1227, 1228, 14140, 1227, 1228, 14140, 14141,
      862, 863, 14141, 14142, 16278, 16279, 16280, 16278, 16279, 16280, 16278,
      16279, 16280, 14140, 14141, 862, 863, 14141, 1227, 1228, 14141, 1227,
      1228, 14141, 1227, 1228, 14141, 1227, 1228, 14141, 1227, 1228, 14141,
      1227, 1228, 14141, 1227, 1228, 14141, 1227, 1228, 14141, 1227, 1228,
      14141, 1227, 1228, 14141, 1227, 1228, 14141, 1227, 1228, 1469, 1470, 1227,
      1228, 1104, 1105,
    ],
    [
      1225, 1226, 1348, 1349, 14168, 1348, 1349, 14168, 1348, 1349, 14166, 1348,
      1349, 14166, 1348, 1349, 14166, 1348, 1349, 14166, 1348, 1349, 14166,
      1348, 1349, 14166, 1348, 1349, 14166, 1348, 1349, 14166, 1348, 1349,
      14166, 1348, 1349, 14166, 1348, 1349, 14166, 1348, 1349, 14166, 14167,
      983, 984, 14167, 14168, 16286, 16287, 16288, 16286, 16287, 16288, 16286,
      16287, 16288, 14166, 14167, 983, 984, 14167, 1348, 1349, 14167, 1348,
      1349, 14167, 1348, 1349, 14167, 1348, 1349, 14167, 1348, 1349, 14167,
      1348, 1349, 14167, 1348, 1349, 14167, 1348, 1349, 14167, 1348, 1349,
      14167, 1348, 1349, 14167, 1348, 1349, 14167, 1348, 1349, 1590, 1591, 1348,
      1349, 1225, 1226,
    ],
    [
      16479, 16480, 1469, 1470, 14194, 1469, 1470, 14194, 1469, 1470, 14192,
      1469, 1470, 14192, 1469, 1470, 14192, 1469, 1470, 14192, 1469, 1470,
      14192, 1469, 1470, 14192, 1469, 1470, 14192, 1469, 1470, 14192, 1469,
      1470, 14192, 1469, 1470, 14192, 1469, 1470, 14192, 1469, 1470, 14192,
      14193, 1104, 1105, 14193, 14194, 16294, 16295, 16296, 16294, 16295, 16296,
      16294, 16295, 16296, 14192, 14193, 1104, 1105, 14193, 1469, 1470, 14193,
      1469, 1470, 14193, 1469, 1470, 14193, 1469, 1470, 14193, 1469, 1470,
      14193, 1469, 1470, 14193, 1469, 1470, 14193, 1469, 1470, 14193, 1469,
      1470, 14193, 1469, 1470, 14193, 1469, 1470, 14193, 1469, 1470, 14193,
      14194, 1469, 1470, 16479, 16480,
    ],
    [
      16479, 16480, 1590, 1591, 14142, 1590, 1591, 14142, 1590, 1591, 14140,
      1590, 1591, 14140, 1590, 1591, 14140, 1590, 1591, 14140, 1590, 1591,
      14140, 1590, 1591, 14140, 1590, 1591, 14140, 1590, 1591, 14140, 1590,
      1591, 14140, 1590, 1591, 14140, 1590, 1591, 14140, 1590, 1591, 14140,
      14141, 1225, 1226, 14141, 14142, 16302, 16303, 16304, 16302, 16303, 16304,
      16302, 16303, 16304, 14140, 14141, 1225, 1226, 14141, 1590, 1591, 14141,
      1590, 1591, 14141, 1590, 1591, 14141, 1590, 1591, 14141, 1590, 1591,
      14141, 1590, 1591, 14141, 1590, 1591, 14141, 1590, 1591, 14141, 1590,
      1591, 14141, 1590, 1591, 14141, 1590, 1591, 14141, 1590, 1591, 14141,
      14142, 1590, 1591, 16479, 16480,
    ],
  ];

  // console.log('PLAYER COORDINATES', yPlayerIndex.current, xPlayerIndex.current);
  // console.log('Player TransformVar', yTransformVar, xTransformVar);
  // console.log(
  //   'VALUE Right',
  //   currentMap[yPlayerIndex.current][xPlayerIndex.current]
  // );

  // console.log('DEMON COORDINATES', ydemonIndex.current, xdemonIndex.current);
  // console.log('KEEP COORDINATES', yKeepIndex.current, xKeepIndex.current);
  // console.log('Player TransformVar', yTransformVar, xTransformVar);
  // console.log('DEMON TransformVar', ydemonTransformVar, xdemonTransformVar);
  // console.log('DOG YTransformVar', ydogTransformVar, xdogTransformVar);

  // useEffect(()=>{
  //   let tempGrid=[]
  //   for (let i=0; i<currentMap.length; i++){
  //     for (let j=0; j<currentMap[i].length; j++){
  //       tempGrid.push(
  //         <button
  //           onClick={() => {
  //             console.log(`Coordinates ${i} - ${j}`);
  //           }}
  //           className="numbers"
  //           style={{
  //             gridColumn: j + 1,
  //             gridRow: i + 1,
  //             color: 'white',
  //           }}
  //         >
  //           {/* {i} - {j} */}
  //           {currentMap[i][j]}
  //         </button>
  //       );
  //     }
  //   }
  // setGridArray(tempGrid)
  // },[])

  //UseEffect for setting proper starting coords on different maps
  useEffect(() => {
    if (props.previousMap === 'trainTracksToTortous') {
      //setYCord
      yPlayerIndex.current = 92;
      //setXcord
      xPlayerIndex.current = 53;
      //set xTransform
      setXTransformVar(-2776);
      //set yTransform
      setYTransformVar(-5588);
      facing.current = 'up';
    }
    if (props.previousMap === 'tortousTrainStation') {
      //setYCord
      yPlayerIndex.current = 54;
      //setXcord
      xPlayerIndex.current = 10;
      //set xTransform
      setXTransformVar(-24);
      //set yTransform
      setYTransformVar(-3136);
      facing.current = 'right';
    }
    if (props.previousMap === 'trainTracksToCapital') {
      //setYCord
      yPlayerIndex.current = 6;
      //setXcord
      xPlayerIndex.current = 52;
      //set xTransform
      setXTransformVar(-2704);
      //set yTransform
      setYTransformVar(-84);
      facing.current = 'down';
    }
    if (props.previousMap === 'tortousFork') {
      //setYCord
      yPlayerIndex.current = 54;
      //setXcord
      xPlayerIndex.current = 93;
      //set xTransform
      setXTransformVar(-5336);
      //set yTransform
      setYTransformVar(-3148);
      facing.current = 'left';
    }
    if (props.previousMap === 'hotelIndoors') {
      //setYCord
      yPlayerIndex.current = 55;
      //setXcord
      xPlayerIndex.current = 51;
      //set xTransform
      setXTransformVar(-2648);
      //set yTransform
      setYTransformVar(-3216);
      facing.current = 'down';
    }
    if (props.previousMap === 'oldManCrawfordInside') {
      //setYCord
      yPlayerIndex.current = 70;
      //setXcord
      xPlayerIndex.current = 88;
      //set xTransform
      setXTransformVar(-5020);
      //set yTransfor
      setYTransformVar(-4180);
      facing.current = 'down';
    }
    if (props.previousMap === 'indoorHouse1') {
      //setYCord
      yPlayerIndex.current = 81;
      //setXcord
      xPlayerIndex.current = 39;
      //set xTransform
      setXTransformVar(-1880);
      //set yTransfor
      setYTransformVar(-4880);
      facing.current = 'down';
    }
    if (props.previousMap === 'indoorHouse3') {
      //setYCord
      yPlayerIndex.current = 24;
      //setXcord
      xPlayerIndex.current = 72;
      //set xTransform
      setXTransformVar(-3992);
      //set yTransfor
      setYTransformVar(-1232);
      facing.current = 'down';
    }
    if (props.previousMap === 'indoorHouse7') {
      //setYCord
      yPlayerIndex.current = 89;
      //setXcord
      xPlayerIndex.current = 94;
      //set xTransform
      setXTransformVar(-4760);
      //set yTransfor
      setYTransformVar(-5392);
      facing.current = 'down';
    }
    if (props.previousMap === 'indoorHouse8') {
      //setYCord
      yPlayerIndex.current = 89;
      //setXcord
      xPlayerIndex.current = 64;
      //set xTransform
      setXTransformVar(-3484);
      //set yTransfor
      setYTransformVar(-5396);
      facing.current = 'down';
    }
    if (props.previousMap === 'indoorHouse2') {
      //setYCord
      yPlayerIndex.current = 89;
      //setXcord
      xPlayerIndex.current = 33;
      //set xTransform
      setXTransformVar(-1496);
      //set yTransfor
      setYTransformVar(-5396);
      facing.current = 'down';
    }
  }, []);

  // UseEffect Keeping track of player and map conditions
  useEffect(() => {
    if (
      (yPlayerIndex.current === 53 && xPlayerIndex.current === 9) ||
      (yPlayerIndex.current === 54 && xPlayerIndex.current === 9) ||
      (yPlayerIndex.current === 55 && xPlayerIndex.current === 9)
    ) {
      props.active('tortousTrainStation', 'tortous');
    }
    if (
      (yPlayerIndex.current === 53 && xPlayerIndex.current === 94) ||
      (yPlayerIndex.current === 54 && xPlayerIndex.current === 94) ||
      (yPlayerIndex.current === 55 && xPlayerIndex.current === 94)
    ) {
      props.active('tortousFork', 'tortous');
    }
  }, [xPlayerIndex.current]);

  useEffect(() => {
    if (
      (yPlayerIndex.current === 5 && xPlayerIndex.current === 51) ||
      (yPlayerIndex.current === 5 && xPlayerIndex.current === 52) ||
      (yPlayerIndex.current === 5 && xPlayerIndex.current === 53)
    ) {
      props.active('trainTracksToCapital', 'tortous');
    }

    if (
      (yPlayerIndex.current === 93 && xPlayerIndex.current === 52) ||
      (yPlayerIndex.current === 93 && xPlayerIndex.current === 53) ||
      (yPlayerIndex.current === 93 && xPlayerIndex.current === 54)
    ) {
      props.active('trainTracksToTortous', 'tortous');
    }
  }, [yPlayerIndex.current]);

  //INDOOR USE EFFECT
  useEffect(() => {
    //Hotel
    if (yPlayerIndex.current === 54 && xPlayerIndex.current === 51) {
      props.active('hotelIndoors', 'tortous');
    }
    //OldManCrawfordInside
    if (yPlayerIndex.current === 69 && xPlayerIndex.current === 88) {
      props.active('oldManCrawfordInside', 'tortous');
    }
    //IndoorHouse 1
    if (yPlayerIndex.current === 80 && xPlayerIndex.current === 39) {
      props.active('indoorHouse1', 'tortous');
    }
    //IndoorHouse 3
    if (
      (yPlayerIndex.current === 23 && xPlayerIndex.current === 72) ||
      (yPlayerIndex.current === 23 && xPlayerIndex.current === 73)
    ) {
      props.active('indoorHouse3', 'tortous');
    }
    //indoor house 7
    // if (yPlayerIndex.current === 88 && xPlayerIndex.current === 84) {
    //   props.active('indoorHouse7', 'tortous');
    // }
    // indoor house 8
    if (yPlayerIndex.current === 88 && xPlayerIndex.current === 64) {
      props.active('indoorHouse8', 'tortous');
    }
    // indoor house 2
    if (yPlayerIndex.current === 88 && xPlayerIndex.current === 33) {
      props.active('indoorHouse2', 'tortous');
    }
  }, [yPlayerIndex.current]);

  //CHARACTER DIALOGUE USE EFFECT
  useEffect(() => {
    const dialogueAction = (event) => {
      if (event.key === 'a') {
        //Facing up
        if (facing.current === 'up') {
          //Guard 1 Lower left NPC
          if (
            (yPlayerIndex.current === 83 && xPlayerIndex.current === 24) ||
            (yPlayerIndex.current === 83 && xPlayerIndex.current === 25)
          ) {
            setNpcFace('faceBrideTT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
          //YO Mama NPC
          if (
            (yPlayerIndex.current === 57 && xPlayerIndex.current === 43) ||
            (yPlayerIndex.current === 57 && xPlayerIndex.current === 44)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue(
              'Just please go away. No one is safe if that lunatic goes off.'
            );
            clickAudio2();
          }
          //Hot Girl
          if (
            (yPlayerIndex.current === 57 && xPlayerIndex.current === 61) ||
            (yPlayerIndex.current === 57 && xPlayerIndex.current === 62)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue(
              'At least the Sun Kings never force people to join. I am proud to serve my King.'
            );
            clickAudio2();
          }
          //Hot Girl
          if (
            (yPlayerIndex.current === 30 && xPlayerIndex.current === 88) ||
            (yPlayerIndex.current === 30 && xPlayerIndex.current === 89)
          ) {
            setNpcFace('faceCoinFlipperTT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 20 && xPlayerIndex.current === 22) ||
            (yPlayerIndex.current === 20 && xPlayerIndex.current === 23)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }

          if (
            (yPlayerIndex.current === 88 && xPlayerIndex.current === 88) ||
            (yPlayerIndex.current === 88 && xPlayerIndex.current === 87)
          ) {
            setNpcFace('facesweeperGuyTT');
            setTextValue(
              "Go away! If we don't keep the city clean, that monster in the station will do it again."
            );
            clickAudio2();
          }

          if (
            (yPlayerIndex.current === 60 && xPlayerIndex.current === 66) ||
            (yPlayerIndex.current === 60 && xPlayerIndex.current === 65)
          ) {
            setNpcFace('faceRedheadTT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }

          if (
            (yPlayerIndex.current === 47 && xPlayerIndex.current === 28) ||
            (yPlayerIndex.current === 47 && xPlayerIndex.current === 27)
          ) {
            setNpcFace('faceBrunetteTT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }

          if (
            (yPlayerIndex.current === 41 && xPlayerIndex.current === 41) ||
            (yPlayerIndex.current === 41 && xPlayerIndex.current === 42)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }

          if (
            (yPlayerIndex.current === 41 && xPlayerIndex.current === 63) ||
            (yPlayerIndex.current === 41 && xPlayerIndex.current === 62)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
        }

        //Facing down
        if (!facing.current) {
          //Jim NPC
          if (
            (yPlayerIndex.current === 85 && xPlayerIndex.current === 89) ||
            (yPlayerIndex.current === 85 && xPlayerIndex.current === 88)
          ) {
            setNpcFace('facesweeperGuyTT');
            setTextValue(
              "Go away! If we don't keep the city clean, that monster in the station will do it again."
            );
            clickAudio2();
          }
          //YO Mama NPC
          if (
            (yPlayerIndex.current === 54 && xPlayerIndex.current === 43) ||
            (yPlayerIndex.current === 52 && xPlayerIndex.current === 42)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue(
              'Just please go away. No one is safe if that lunatic goes off.'
            );
            clickAudio2();
          }
          //Hot Girl
          if (
            (yPlayerIndex.current === 54 && xPlayerIndex.current === 62) ||
            (yPlayerIndex.current === 54 && xPlayerIndex.current === 61)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue(
              'At least the Sun Kings never force people to join. I am proud to serve my King.'
            );
            clickAudio2();
          }
          //Hot Girl
          if (
            (yPlayerIndex.current === 27 && xPlayerIndex.current === 88) ||
            (yPlayerIndex.current === 27 && xPlayerIndex.current === 89)
          ) {
            setNpcFace('faceCoinFlipperTT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 17 && xPlayerIndex.current === 23) ||
            (yPlayerIndex.current === 17 && xPlayerIndex.current === 22)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue('Get the fuck out of here you little shit stain.');
            clickAudio2();
          }

          //Old Man
          if (
            (yPlayerIndex.current === 57 && xPlayerIndex.current === 66) ||
            (yPlayerIndex.current === 57 && xPlayerIndex.current === 65)
          ) {
            setNpcFace('faceRedheadTT');
            setTextValue(
              'At least the Sun Kings never force people to join. I am proud to serve my King.'
            );
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 38 && xPlayerIndex.current === 41) ||
            (yPlayerIndex.current === 38 && xPlayerIndex.current === 42)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 38 && xPlayerIndex.current === 63) ||
            (yPlayerIndex.current === 38 && xPlayerIndex.current === 64)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
        }

        //Facing left
        if (facing.current === 'left') {
          if (
            (yPlayerIndex.current === 81 && xPlayerIndex.current === 26) ||
            (yPlayerIndex.current === 82 && xPlayerIndex.current === 26)
          ) {
            setNpcFace('faceBrideTT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
          //YO Mama NPC
          if (
            (yPlayerIndex.current === 55 && xPlayerIndex.current === 45) ||
            (yPlayerIndex.current === 56 && xPlayerIndex.current === 45)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue(
              'Just please go away. No one is safe if that lunatic goes off.'
            );
            clickAudio2();
          }
          //Hot Girl
          if (
            (yPlayerIndex.current === 55 && xPlayerIndex.current === 63) ||
            (yPlayerIndex.current === 56 && xPlayerIndex.current === 63)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue(
              'At least the Sun Kings never force people to join. I am proud to serve my King.'
            );

            clickAudio2();
          }
          //Hot Girl
          if (
            (yPlayerIndex.current === 28 && xPlayerIndex.current === 90) ||
            (yPlayerIndex.current === 29 && xPlayerIndex.current === 90)
          ) {
            setNpcFace('faceCoinFlipperTT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 19 && xPlayerIndex.current === 24) ||
            (yPlayerIndex.current === 20 && xPlayerIndex.current === 24)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue('Get the fuck out of here you little shit stain.');
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 87 && xPlayerIndex.current === 90) ||
            (yPlayerIndex.current === 86 && xPlayerIndex.current === 90)
          ) {
            setNpcFace('facesweeperGuyTT');
            setTextValue(
              "Go away! If we don't keep the city clean, that monster in the station will do it again."
            );
            clickAudio2();
          }

          //Old Man
          if (
            (yPlayerIndex.current === 47 && xPlayerIndex.current === 30) ||
            (yPlayerIndex.current === 46 && xPlayerIndex.current === 30)
          ) {
            setNpcFace('faceBrunetteTT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 40 && xPlayerIndex.current === 43) ||
            (yPlayerIndex.current === 41 && xPlayerIndex.current === 43)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 40 && xPlayerIndex.current === 65) ||
            (yPlayerIndex.current === 41 && xPlayerIndex.current === 65)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
        }

        //Facing right
        if (facing.current === 'right') {
          if (
            (yPlayerIndex.current === 81 && xPlayerIndex.current === 23) ||
            (yPlayerIndex.current === 82 && xPlayerIndex.current === 23)
          ) {
            setNpcFace('faceBrideTT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
          //YO Mama NPC
          if (
            (yPlayerIndex.current === 55 && xPlayerIndex.current === 42) ||
            (yPlayerIndex.current === 56 && xPlayerIndex.current === 42)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue(
              'Just please go away. No one is safe if that lunatic goes off.'
            );
            clickAudio2();
          }
          //Hot Girl
          if (
            (yPlayerIndex.current === 55 && xPlayerIndex.current === 60) ||
            (yPlayerIndex.current === 56 && xPlayerIndex.current === 60)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue(
              'At least the Sun Kings never force people to join. I am proud to serve my King.'
            );
            clickAudio2();
          }
          //Hot Girl
          if (
            (yPlayerIndex.current === 28 && xPlayerIndex.current === 87) ||
            (yPlayerIndex.current === 29 && xPlayerIndex.current === 87)
          ) {
            setNpcFace('faceCoinFlipperTT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 19 && xPlayerIndex.current === 21) ||
            (yPlayerIndex.current === 20 && xPlayerIndex.current === 21)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue('Get the fuck out of here you little shit stain.');
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 87 && xPlayerIndex.current === 87) ||
            (yPlayerIndex.current === 86 && xPlayerIndex.current === 87)
          ) {
            setNpcFace('facesweeperGuyTT');
            setTextValue(
              "Go away! If we don't keep the city clean, that monster in the station will do it again."
            );
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 59 && xPlayerIndex.current === 65) ||
            (yPlayerIndex.current === 60 && xPlayerIndex.current === 65)
          ) {
            setNpcFace('faceRedheadTT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }

          //Old Man
          if (
            (yPlayerIndex.current === 46 && xPlayerIndex.current === 27) ||
            (yPlayerIndex.current === 45 && xPlayerIndex.current === 27)
          ) {
            setNpcFace('faceBrunetteTT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 40 && xPlayerIndex.current === 40) ||
            (yPlayerIndex.current === 41 && xPlayerIndex.current === 40)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
          //Old Man
          if (
            (yPlayerIndex.current === 40 && xPlayerIndex.current === 62) ||
            (yPlayerIndex.current === 41 && xPlayerIndex.current === 62)
          ) {
            setNpcFace('faceGuard1TT');
            setTextValue('My dad is mad at me');
            clickAudio2();
          }
        }
      }
    };
    window.addEventListener('keydown', dialogueAction);
    return () => {
      window.removeEventListener('keydown', dialogueAction);
    };
  }, []);

  //DOOR LOCKED LOGIC
  useEffect(() => {
    const dialogueAction = (event) => {
      if (event.key === 'b') {
        //Facing up
        if (facing.current === 'up') {
          if (
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 48) ||
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 47) ||
            (yPlayerIndex.current === 88 && xPlayerIndex.current === 38) ||
            (yPlayerIndex.current === 88 && xPlayerIndex.current === 43) ||
            (yPlayerIndex.current === 88 && xPlayerIndex.current === 23) ||
            (yPlayerIndex.current === 88 && xPlayerIndex.current === 28) ||
            (yPlayerIndex.current === 88 && xPlayerIndex.current === 33) ||
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 38) ||
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 28) ||
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 23) ||
            (yPlayerIndex.current === 81 && xPlayerIndex.current === 32) ||
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 23) ||
            (yPlayerIndex.current === 81 && xPlayerIndex.current === 46) ||
            (yPlayerIndex.current === 81 && xPlayerIndex.current === 32) ||
            (yPlayerIndex.current === 70 && xPlayerIndex.current === 46) ||
            (yPlayerIndex.current === 70 && xPlayerIndex.current === 39) ||
            (yPlayerIndex.current === 70 && xPlayerIndex.current === 32) ||
            (yPlayerIndex.current === 70 && xPlayerIndex.current === 18) ||
            (yPlayerIndex.current === 60 && xPlayerIndex.current === 35) ||
            (yPlayerIndex.current === 55 && xPlayerIndex.current === 45) ||
            (yPlayerIndex.current === 55 && xPlayerIndex.current === 57) ||
            (yPlayerIndex.current === 45 && xPlayerIndex.current === 35) ||
            (yPlayerIndex.current === 45 && xPlayerIndex.current === 26) ||
            (yPlayerIndex.current === 45 && xPlayerIndex.current === 17) ||
            (yPlayerIndex.current === 19 && xPlayerIndex.current === 21) ||
            (yPlayerIndex.current === 19 && xPlayerIndex.current === 26) ||
            (yPlayerIndex.current === 24 && xPlayerIndex.current === 78) ||
            (yPlayerIndex.current === 45 && xPlayerIndex.current === 70) ||
            (yPlayerIndex.current === 45 && xPlayerIndex.current === 78) ||
            (yPlayerIndex.current === 45 && xPlayerIndex.current === 86) ||
            (yPlayerIndex.current === 61 && xPlayerIndex.current === 70) ||
            (yPlayerIndex.current === 81 && xPlayerIndex.current === 58) ||
            (yPlayerIndex.current === 81 && xPlayerIndex.current === 66) ||
            (yPlayerIndex.current === 81 && xPlayerIndex.current === 73) ||
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 79) ||
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 74) ||
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 69) ||
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 43) ||
            (yPlayerIndex.current === 70 && xPlayerIndex.current === 25) ||
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 59)
          ) {
            clickAudio2();
            setTextValue('This door is locked');
          }

          if (
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 33) ||
            (yPlayerIndex.current === 89 && xPlayerIndex.current === 32)
          ) {
            setdoorToggle1(true);
          }
        }
      }
    };
    window.addEventListener('keydown', dialogueAction);
    return () => {
      window.removeEventListener('keydown', dialogueAction);
    };
  }, []);

  //OVERWOLRD ITEM CHECK LOGIC
  useEffect(() => {
    const dialogueAction = (event) => {
      if (event.key === 'b') {
        //Facing up
        if (facing.current === 'up') {
          if (
            (yPlayerIndex.current === 7 && xPlayerIndex.current === 50) ||
            (yPlayerIndex.current === 7 && xPlayerIndex.current === 49)
          ) {
            setTextValue('Welcome To Tortous');
          }
        }

        //Facing down
        if (!facing.current) {
          //Jim NPC
          if (
            (yPlayerIndex.current === 91 && xPlayerIndex.current === 56) ||
            (yPlayerIndex.current === 91 && xPlayerIndex.current === 55)
          ) {
            setTextValue('Welcome To Tortous');
          }
        }

        //Facing left
        if (facing.current === 'left') {
          if (
            (yPlayerIndex.current === 55 && xPlayerIndex.current === 90) ||
            (yPlayerIndex.current === 56 && xPlayerIndex.current === 90)
          ) {
            setTextValue('Welcome To Tortous');
          }

          if (ydemonIndex.current === 91 && xdemonIndex.current === 46) {
            setTextValue('HOLA');
          }
        }

        //Facing right
        if (facing.current === 'right') {
          if (
            (yPlayerIndex.current === 55 && xPlayerIndex.current === 12) ||
            (yPlayerIndex.current === 56 && xPlayerIndex.current === 12)
          ) {
            setTextValue('Welcome To Tortous');
          }
        }
      }
    };
    window.addEventListener('keydown', dialogueAction);
    return () => {
      window.removeEventListener('keydown', dialogueAction);
    };
  }, []);

  //ITEM GRABBING LOGIC
  useEffect(() => {
    const dialogueAction = (event) => {
      if (event.key === 'g') {
        //Facing ups
        if (facing.current === 'left') {
          if (
            (yPlayerIndex.current === 90 && xPlayerIndex.current === 47) ||
            (yPlayerIndex.current === 91 && xPlayerIndex.current === 47)
          ) {
            clickAudio3();
            setTextValue('Hooray!!!!!!');
            setXdemonTransformVar(-2844);
            setYdemonTransformVar(-5338);
            setToggle1(true);
            demonSetToggle1(true);

            setHue(190);
            setBrightness(80);
            setSepia(0);
            setContrast(100);

            setTimeout(() => {
              setHue(0);
              setBrightness(100);
              setSepia(0);
              setContrast(120);
            }, 10000);
          }
        }
      }
    };
    window.addEventListener('keydown', dialogueAction);
    return () => {
      window.removeEventListener('keydown', dialogueAction);
    };
  }, []);

  // Useffect for demon grabbing toggle
  useEffect(() => {
    if (demonToggle1 === true) {
      setTimeout(() => {
        setXdemonTransformVar(null);
        setYdemonTransformVar(null);
      }, 1500);
    }
  }, [demonToggle1]);

  //----------------------------------------------------------------------------------------------------

  //KEY ARRAY HANDLER
  //listens for the current down key and saves it as the current key state
  //wrapping in a useEffect prevents compounding event listeners
  useEffect(() => {
    const keyDownHandler = (event) => {
      // console.log(event.key)
      if (
        event.key === 'ArrowRight' ||
        event.key === 'ArrowLeft' ||
        event.key === 'ArrowUp' ||
        event.key === 'ArrowDown'
      ) {
        let newArr = dirArr.current;
        // if the key stroke is not in the array
        if (newArr.indexOf(event.key) == -1) {
          newArr.unshift(event.key);

          dirArr.current = newArr;
          setTick((prevCount) => prevCount + 1);
        }
        setTextValue(null);
        setToggle1(false);
      }
    };
    window.addEventListener('keydown', keyDownHandler);

    const keyUpHandler = (event) => {
      if (dirArr.current.indexOf(event.key) > -1) {
        let newArr2 = dirArr.current.filter((el) => el != event.key);
        dirArr.current = newArr2;
        setTick((prevCount) => prevCount + 1);
      }
    };
    window.addEventListener('keyup', keyUpHandler);

    return () => {
      window.removeEventListener('keydown', keyDownHandler);
      window.removeEventListener('keyup', keyUpHandler);
    };
  }, []);

  //FACING LOGIC
  dirArr.current[0] === 'ArrowRight'
    ? (facing.current = 'right')
    : dirArr.current[0] === 'ArrowLeft'
    ? (facing.current = 'left')
    : dirArr.current[0] === 'ArrowUp'
    ? (facing.current = 'up')
    : dirArr.current[0] == 'ArrowDown'
    ? (facing.current = null)
    : null;


  //REQUEST ANIMATION FRAME LOGIC
  // animate is a reccursive function that takes the current key and updates the cordinate variables depending on which direction is pushed. It also sets which way the character is facing

  const animate = () => {
    if (dirArr.current[0] === 'ArrowRight') {
       if (
         xTransformVar === xdemonTransformVar
       ){
        console.log("HELLLLP ME")
        return () => cancelAnimationFramecancelAnimationFrame(animate);
       }
         if (
           currentMap[yPlayerIndex.current][xPlayerIndex.current + 1] === 0 ||
           xBank.current < 0
         )
           if (
             yBank.current + 32 < 64 ||
             currentMap[yPlayerIndex.current - 1][xPlayerIndex.current + 1] == 0
           ) {
             {
               setXTransformVar((prevCount) => prevCount - speedRef.current);
               xBank.current = xBank.current + speedRef.current;
               if (xBank.current === 64) {
                 xPlayerIndex.current = xPlayerIndex.current + 1;

                 xBank.current = 0;
               }
             }
           }
    }
    //if current key is a, the x cordinate becomes  the previous state - the speed
       
    if (dirArr.current[0] === 'ArrowLeft') {
      if (
        currentMap[yPlayerIndex.current][xPlayerIndex.current - 1] === 0 ||
        xBank.current > 0
      )
        if (
          yBank.current + 32 < 64 ||
          currentMap[yPlayerIndex.current - 1][xPlayerIndex.current] == 0
        ) {
          {
            setXTransformVar((prevCount) => prevCount + speedRef.current);
            xBank.current = xBank.current - speedRef.current;

            if (xBank.current < 0) {
              xPlayerIndex.current = xPlayerIndex.current - 1;
              xBank.current = 60;
            }
          }
        }
    }

    //if current key is w, the y cordinate becomes  the previous state + the speed
    
    if (dirArr.current[0] === 'ArrowUp') {
      if (
        currentMap[yPlayerIndex.current - 1][xPlayerIndex.current] === 0 ||
        yBank.current < 0
      ) {
        if (
          xBank.current + 48 < 64 ||
          currentMap[yPlayerIndex.current - 1][xPlayerIndex.current + 1] == 0
        ) {
          setYTransformVar((prevCount) => prevCount + speedRef.current);
          yBank.current = yBank.current + speedRef.current;
          if (yBank.current === 64) {
            yPlayerIndex.current = yPlayerIndex.current - 1;
            yBank.current = 0;
          }
        }
      }
    }

   
    if (dirArr.current[0] === 'ArrowDown') {
      if (
        currentMap[yPlayerIndex.current + 1][xPlayerIndex.current] === 0 ||
        yBank.current > 0
      ) {
        if (
          xBank.current < 16 ||
          currentMap[yPlayerIndex.current][xPlayerIndex.current + 1] == 0
        ) {
          setYTransformVar((prevCount) => prevCount - speedRef.current);
          yBank.current = yBank.current - speedRef.current;
          if (yBank.current < 0) {
            yPlayerIndex.current = yPlayerIndex.current + 1;
            yBank.current = 60;
          }
        }
      }
    }

    requestRef.current = requestAnimationFrame(animate);
  };


  //every time the current key changes this runs
  useEffect(() => {
    if (dirArr.current[0]) {
      setWalker('true');
      if (
        dirArr.current[0] === 'ArrowRight' ||
        dirArr.current[0] === 'ArrowLeft' ||
        dirArr.current[0] === 'ArrowUp' ||
        dirArr.current[0] === 'ArrowDown'
      ) {
        requestRef.current = requestAnimationFrame(animate);
        return () => cancelAnimationFrame(requestRef.current);
      }
    }
    if (!dirArr.current[0]) {
      setWalker('false');
    }
  }, [tick]);

  //==========================================================================================

  //  let secondsPassed = 0;
  //  let oldTimeStamp = 0;
  //      secondsPassed = (timeStamp - oldTimeStamp) / 1000;
  //      oldTimeStamp = timeStamp;
  //      console.log('TIMESTAMP:', timeStamp);

  // DATE AND TIME< SECONDS PASSED COUNTER
  // let currentDate = Date.now();
  // let seconds = Math.floor(Date.now() / 1000);

  // console.log('DATE NOW', currentDate);
  // console.log('SECONDS', seconds);

  // let today = new Date();

  // function formatDate(date, format) {
  //   console.log('FORMATTED DATE', date);
  // }
  // let stamp = formatDate(today, 'mm/dd/yy');

  // useEffect(() => {
  //   setButt(stamp);
  // });

  // //SECONDS COUNTER
  // let secondsCounter = 0;

  // function secondsIncrement() {
  //   secondsCounter += 1;
  //   console.log(`${secondsCounter} Seconds has passed`);
  // }
  // let cancel = setInterval(secondsIncrement, 1000);

  //NPC LOGIC
  //RIGHT
  function npc1Move() {
    while (xKeepIndex.current <= 57) {
      // console.log("here")
      npcfacing.current = 'right';
      setNpcWalking('true');

      // CHECK TO SEE IF TILE IS WALKABLE
      if (
        currentMap[yPlayerIndex.current][xPlayerIndex.current + 1] !== 0 ||
        xBank.current < 0
      ) {
        setNpcWalking('false');
        return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
      }

      // CHECK TO SEE IF COLLISION WITH PLAYER IS HAPPENING
      if (
        (xTransformVar === xdemonTransformVar - 50) &&
        ((yTransformVar <= ydemonTransformVar + 90) &&
        (yTransformVar >= ydemonTransformVar - 90))
      ) {
        setNpcWalking('false');
        setNpcFace('faceBrideTT');
        setTextValue('Excuse me');
        return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
      }

      // LOGIC TO MOVE PLAYER IF ABOVE CONDITIONS HAVE BEEN PASSED ON
      setXdemonTransformVar((prevCount) => prevCount - speedRef2.current);
      xdemonBank.current = xdemonBank.current + speedRef2.current;

      if (xdemonBank.current === 64) {
        xdemonIndex.current = xdemonIndex.current + 1;
        xKeepIndex.current = xKeepIndex.current + 1;
        xdemonBank.current = 0;
      }

      //CANCEL ANIMATIONFRAME TO QUIT WHILE LOOP
      return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
    }

    //DOWN
    while (yKeepIndex.current <= 92) {
      npcfacing.current = null;
      setNpcWalking('true');

      // // CHECK TO SEE IF TILE IS WALKABLE
      if (currentMap[yPlayerIndex.current][xPlayerIndex.current + 1] !== 0) {
        // console.log('NOT AVAILBALE TO PASS');
        setNpcWalking('false');
        return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
      }

      // CHECK TO SEE IF COLLISION WITH PLAYER IS HAPPENING
        if (
          (yTransformVar === ydemonTransformVar - 90) &&
          ((xTransformVar <= xdemonTransformVar + 50) &&
          (xTransformVar >= xdemonTransformVar - 50))
        ) {
          setNpcWalking('false');
          setNpcFace('faceBrideTT');
          setTextValue('Excuse me');
          // clickAudio2();
          return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
        }

      // LOGIC TO MOVE PLAYER IF ABOVE CONDITIONS HAVE BEEN PASSED ON
      setYdemonTransformVar((prevCount) => prevCount - speedRef2.current);
      ydemonBank.current = ydemonBank.current - speedRef2.current;

      if (ydemonBank.current < 0) {
        ydemonIndex.current = ydemonIndex.current + 1;
        yKeepIndex.current = yKeepIndex.current + 1;
        ydemonBank.current = 60;
      }

      //CANCEL ANIMATIONFRAME TO QUIT WHILE LOOP
      return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
    }

    //LEFT
    while (xdemonIndex.current >= 53) {
      npcfacing.current = 'left';
      setNpcWalking('true');

      // // CHECK TO SEE IF TILE IS WALKABLE
      if (currentMap[yPlayerIndex.current][xPlayerIndex.current - 1] !== 0) {
        // console.log('HELP COLLISION');
        setNpcWalking('false');
        return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
      }

      // CHECK TO SEE IF COLLISION WITH PLAYER IS HAPPENING
      if (
        (xTransformVar === xdemonTransformVar + 50) &&
        ((yTransformVar <= ydemonTransformVar + 90 ) &&
         ( yTransformVar >= ydemonTransformVar - 90 ))
      ) {
        setNpcWalking('false');
        setNpcFace('faceBrideTT');
        setTextValue('Excuse me');
        props.passUpState('BOOMTIME');
        // clickAudio2();
        return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
      }

      // LOGIC TO MOVE PLAYER IF ABOVE CONDITIONS HAVE BEEN PASSED ON
      setXdemonTransformVar((prevCount) => prevCount + speedRef2.current);
      xdemonBank.current = xdemonBank.current - speedRef2.current;

      if (xdemonBank.current < 0) {
        xdemonIndex.current = xdemonIndex.current + -1;
        //xKeepIndex.current = xKeepIndex.current + -1;
        xdemonBank.current = 60;
      }

      //CANCEL ANIMATIONFRAME TO QUIT WHILE LOOP
      return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
    }

    //UP
      while (ydemonIndex.current >= 91) {
        npcfacing.current = 'up';
        setNpcWalking('true');

        // // CHECK TO SEE IF TILE IS WALKABLE
        if (currentMap[yPlayerIndex.current - 1][xPlayerIndex.current] !== 0) {
          // console.log('HELP COLLISION');
          setNpcWalking('false');
          return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
        }

        // CHECK TO SEE IF COLLISION WITH PLAYER IS HAPPENING
        if (
        (yTransformVar === ydemonTransformVar + 90) &&
        ((xTransformVar <= xdemonTransformVar + 50) &&
        ( xTransformVar >= xdemonTransformVar - 50 ))
      ) {
          setNpcWalking('false');
          setNpcFace('faceBrideTT');
          setTextValue('Excuse me');
          return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
        }

        // LOGIC TO MOVE PLAYER IF ABOVE CONDITIONS HAVE BEEN PASSED ON
        setYdemonTransformVar((prevCount) => prevCount + speedRef2.current);
        ydemonBank.current = ydemonBank.current + speedRef2.current;

        if (ydemonBank.current === 64) {
          ydemonIndex.current = ydemonIndex.current + -1;
          ydemonBank.current = 0;
        }

        //CANCEL ANIMATIONFRAME TO QUIT WHILE LOOP
        return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
      }

    yKeepIndex.current = 88;
    xKeepIndex.current = 53;
    requestRef3.current = requestAnimationFrame(npc1Move);
  }

  useEffect(() => {
    requestRef3.current = requestAnimationFrame(npc1Move);
    return () => cancelAnimationFrame(requestRef3.current);
  });



//KEEP  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ KEEP
  // //KEEP NPC LOGIC

  //RIGHT
  // function npc1Move() {
  //   while (xKeepIndex.current <= 57) {
  //     npcfacing.current = 'right';
  //     setNpcWalking('true');

  //     // CHECK TO SEE IF TILE IS WALKABLE
  //     if (
  //       currentMap[yPlayerIndex.current][xPlayerIndex.current + 1] !== 0 ||
  //       xBank.current < 0
  //     ) {
  //       setNpcWalking('false');
  //       return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
  //     }

  //     // CHECK TO SEE IF COLLISION WITH PLAYER IS HAPPENING
  //     if (
  //       (xPlayerIndex.current === xdemonIndex.current &&
  //         yPlayerIndex.current === ydemonIndex.current) ||
  //       (xPlayerIndex.current - 1 === xdemonIndex.current &&
  //         yPlayerIndex.current === ydemonIndex.current)
  //     ) {
  //       setNpcWalking('false');
  //       setNpcFace('faceBrideTT');
  //       setTextValue('Excuse me');
  //       clickAudio2();
  //       return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
  //     }

  //     // LOGIC TO MOVE PLAYER IF ABOVE CONDITIONS HAVE BEEN MET
  //     setXdemonTransformVar((prevCount) => prevCount - speedRef2.current);
  //     xdemonBank.current = xdemonBank.current + speedRef2.current;

  //     if (xdemonBank.current === 64) {
  //       xdemonIndex.current = xdemonIndex.current + 1;
  //       xKeepIndex.current = xKeepIndex.current + 1;
  //       xdemonBank.current = 0;
  //     }

  //     //CANCEL ANIMATIONFRAME TO QUIT WHILE LOOP
  //     return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
  //   }

  //   //DOWN
  //   while (yKeepIndex.current <= 92) {
  //     npcfacing.current = null;
  //     setNpcWalking('true');

  //     // CHECK TO SEE IF TILE IS WALKABLE
  //     if (currentMap[yPlayerIndex.current][xPlayerIndex.current + 1] !== 0) {
  //       console.log('NOT AVAILBALE TO PASS');
  //       setNpcWalking('false');
  //       return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
  //     }

  //     // CHECK TO SEE IF COLLISION WITH PLAYER IS HAPPENING
  //     if (
  //       (xPlayerIndex.current === xdemonIndex.current &&
  //         yPlayerIndex.current === ydemonIndex.current) ||
  //       (xPlayerIndex.current === xdemonIndex.current &&
  //         yPlayerIndex.current - 1 === ydemonIndex.current)
  //     ) {
  //       setNpcWalking('false');
  //       setNpcFace('faceBrideTT');
  //       setTextValue('Excuse me');
  //       clickAudio2();
  //       return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
  //     }

  //     // LOGIC TO MOVE PLAYER IF ABOVE CONDITIONS HAVE BEEN MET
  //     setYdemonTransformVar((prevCount) => prevCount - speedRef2.current);
  //     ydemonBank.current = ydemonBank.current - speedRef2.current;

  //     if (ydemonBank.current < 0) {
  //       ydemonIndex.current = ydemonIndex.current + 1;
  //       yKeepIndex.current = yKeepIndex.current + 1;
  //       ydemonBank.current = 60;
  //     }

  //     //CANCEL ANIMATIONFRAME TO QUIT WHILE LOOP
  //     return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
  //   }

  //   //LEFT
  //   while (xdemonIndex.current >= 53) {
  //     npcfacing.current = 'left';
  //     setNpcWalking('true');

  //     // CHECK TO SEE IF TILE IS WALKABLE
  //     if (currentMap[yPlayerIndex.current][xPlayerIndex.current - 1] !== 0) {
  //       console.log('HELP COLLISION');
  //       setNpcWalking('false');
  //       return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
  //     }

  //     // CHECK TO SEE IF COLLISION WITH PLAYER IS HAPPENING
  //     if (
  //       (xPlayerIndex.current === xdemonIndex.current &&
  //         yPlayerIndex.current === ydemonIndex.current) ||
  //       (xPlayerIndex.current === xdemonIndex.current - 1 &&
  //         yPlayerIndex.current === ydemonIndex.current - 1)
  //     ) {
  //       setNpcWalking('false');
  //       setNpcFace('faceBrideTT');
  //       setTextValue('Excuse me');
  //       clickAudio2();
  //       return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
  //     }

  //     // LOGIC TO MOVE PLAYER IF ABOVE CONDITIONS HAVE BEEN MET
  //     setXdemonTransformVar((prevCount) => prevCount + speedRef2.current);
  //     xdemonBank.current = xdemonBank.current - speedRef2.current;

  //     if (xdemonBank.current < 0) {
  //       xdemonIndex.current = xdemonIndex.current + -1;
  //       //xKeepIndex.current = xKeepIndex.current + -1;
  //       xdemonBank.current = 60;
  //     }

  //     //CANCEL ANIMATIONFRAME TO QUIT WHILE LOOP
  //     return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
  //   }

  //   //UP
  //   while (ydemonIndex.current >= 91) {
  //     npcfacing.current = 'up';
  //     setNpcWalking('true');

  //     // CHECK TO SEE IF TILE IS WALKABLE
  //     if (currentMap[yPlayerIndex.current - 1][xPlayerIndex.current] !== 0) {
  //       console.log('HELP COLLISION');
  //       setNpcWalking('false');
  //       return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
  //     }

  //     // CHECK TO SEE IF COLLISION WITH PLAYER IS HAPPENING
  //     if (
  //       (xPlayerIndex.current === xdemonIndex.current &&
  //         yPlayerIndex.current === ydemonIndex.current) ||
  //       (xPlayerIndex.current === xdemonIndex.current &&
  //         yPlayerIndex.current === ydemonIndex.current - 1)
  //     ) {
  //       setNpcWalking('false');
  //       setNpcFace('faceBrideTT');
  //       setTextValue('Excuse me');
  //       clickAudio2();
  //       return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
  //     }

  //     // LOGIC TO MOVE PLAYER IF ABOVE CONDITIONS HAVE BEEN MET
  //     setYdemonTransformVar((prevCount) => prevCount + speedRef2.current);
  //     ydemonBank.current = ydemonBank.current + speedRef2.current;

  //     if (ydemonBank.current === 64) {
  //       ydemonIndex.current = ydemonIndex.current + -1;
  //       ydemonBank.current = 0;
  //     }

  //     //CANCEL ANIMATIONFRAME TO QUIT WHILE LOOP
  //     return () => cancelAnimationFramecancelAnimationFrame(npc1Move);
  //   }

  //   yKeepIndex.current = 88;
  //   xKeepIndex.current = 53;
  //   requestRef3.current = requestAnimationFrame(npc1Move);
  // }

  // useEffect(() => {
  //   requestRef3.current = requestAnimationFrame(npc1Move);
  //   return () => cancelAnimationFrame(requestRef3.current);
  // });

  //update the style for the npc character by transforming it according the new x and y variables
  //map and character share the varaibles since they move together

 

  return (
    <div>
      <div style={{ filter: `saturate(${saturate}%)` }}>
        <div style={{ filter: `hue-rotate(${hue}deg)` }}>
          <div style={{ filter: `brightness(${brightness}%)` }}>
            <div style={{ filter: `sepia(${sepia}%)` }}>
              <div style={{ filter: `contrast(${contrast}%)` }}>
                <div style={{ filter: `invert(${invert}%)` }}>
                  <div className="camera fade-in">
                    <div>
                      <div
                        className="mapT pixel-art"
                        style={{
                          transform: `translate3d( ${xTransformVar}px, ${yTransformVar}px, 0 )`,
                        }}
                      >
                        {gridArray}
                        <div
                          className="character pixel-art"
                          facing={facing.current}
                          walking={walker}
                          style={{
                            transform: `translate3d( ${
                              600 - xTransformVar
                            }px, ${272 - yTransformVar}px, 0 )`,
                          }}
                        >
                          {toggle1 === false ? (
                            <div className="character_spritesheet pixel-art"></div>
                          ) : (
                            <div className="character_spritesheet2 pixel-art"></div>
                          )}
                        </div>

                        <div
                          className="sweeperGuyTT pixel-art"
                          style={{
                            transform: `translate3d( ${5646}px, ${5496}px, 0 )`,
                          }}
                        >
                          <div className="sweeperGuyTT_spritesheet pixel-art"></div>
                        </div>

                        <div
                          className="brideTT pixel-art"
                          style={{
                            transform: `translate3d( ${1545}px, ${5160}px, 0 )`,
                          }}
                        >
                          <div className="brideTT_spritesheet pixel-art"></div>
                        </div>

                        <div
                          className="redheadTT pixel-art"
                          style={{
                            transform: `translate3d( ${4232}px, ${3700}px, 0 )`,
                          }}
                        >
                          <div className="redheadTT_spritesheet pixel-art"></div>
                        </div>

                        <div
                          className="brunetteTT pixel-art"
                          style={{
                            transform: `translate3d( ${1800}px, ${2860}px, 0 )`,
                          }}
                        >
                          <div className="brunetteTT_spritesheet pixel-art"></div>
                        </div>

                        <div
                          className="crazyGuyTT pixel-art"
                          style={{
                            transform: `translate3d( ${4232}px, ${1838}px, 0 )`,
                          }}
                        >
                          <div className="crazyGuyTT_spritesheet pixel-art"></div>
                        </div>

                        <div
                          className="coinFlipperTT pixel-art"
                          style={{
                            transform: `translate3d( ${5646}px, ${1775}px, 0 )`,
                          }}
                        >
                          <div className="coinFlipperTT_spritesheet pixel-art"></div>
                        </div>

                        <div
                          className="blackSmithTT pixel-art"
                          style={{
                            transform: `translate3d( ${2976}px, ${1604}px, 0 )`,
                          }}
                        >
                          <div className="blackSmithTT_spritesheet pixel-art"></div>
                        </div>

                        <div
                          className="guard1TT pixel-art"
                          style={{
                            transform: `translate3d( ${3910}px, ${3508}px, 0 )`,
                          }}
                        >
                          <div className="guard1TT_spritesheet pixel-art"></div>
                        </div>

                        <div
                          className="guard1TT pixel-art"
                          style={{
                            transform: `translate3d( ${2770}px, ${3508}px, 0 )`,
                          }}
                        >
                          <div className="guard1TT_spritesheet pixel-art"></div>
                        </div>

                        <div
                          className="guard1TT pixel-art"
                          style={{
                            transform: `translate3d( ${4035}px, ${2490}px, 0 )`,
                          }}
                        >
                          <div className="guard1TT_spritesheet pixel-art"></div>
                        </div>

                        <div
                          className="guard1TT pixel-art"
                          style={{
                            transform: `translate3d( ${2650}px, ${2490}px, 0 )`,
                          }}
                        >
                          <div className="guard1TT_spritesheet pixel-art"></div>
                        </div>

                        <div
                          className="roofGuardTT pixel-art"
                          style={{
                            transform: `translate3d( ${3242}px, ${2736}px, 0 )`,
                          }}
                        >
                          <div className="roofGuardTT_spritesheet pixel-art"></div>
                        </div>

                        <div
                          className="dogTT pixel-art"
                          style={{
                            transform: `translate3d( ${
                              600 - xdogTransformVar
                            }px, ${272 - ydogTransformVar}px, 0 )`,
                          }}
                        >
                          <div className="dogTT_spritesheet pixel-art"></div>
                        </div>
                        <div
                          className="npcWalkerDrone1 pixel-art"
                          npcfacing={npcfacing.current}
                          npcwalking={npcwalking}
                          style={{
                            zIndex: -1,
                            transform: `translate3d( ${
                              600 - xdemonTransformVar
                            }px, ${272 - ydemonTransformVar}px, 0 )`,
                          }}
                        >
                          <div className="npcWalkerDrone1_spritesheet pixel-art"></div>
                        </div>
                      </div>
                    </div>
                    {textValue ? (
                      <dialog
                        id="dialogStyle"
                        className={`${npcFace} textBox typewriter`}
                        open
                      >
                        <p>{textValue}</p>
                      </dialog>
                    ) : null}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Tortous;
