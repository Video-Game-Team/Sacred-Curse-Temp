:root {
    --pixel-size: 2px;
    --grid-cell: calc(var(--pixel-size) * 16);
    --bg: #070000;
}

@media(min-width: 700px) {
    :root {
        --pixel-size: 3px;
    }
}

@media(min-width: 1000px) {
    :root {
        --pixel-size: 4px;
    }
}


html,
body {
    height: 100%;
}

body {
    background: var(--bg);
    display: flex;
    align-items: center;
    justify-content: center;
}

.pixel-art {
    image-rendering: pixelated;
}


.map {
    /* display: block; */
    max-height: 50000px;
    min-width: 50000px;
    image-rendering: pixelated;
    background-image: url("./src/assets/maps/Map1.png");
    background-size: 10000px; 
    width: calc(40 * var(--grid-cell));
    height: calc(40 * var(--grid-cell)); 
    background-position: 100% 100%;
    position: absolute;
}

/* .map {
    background-size: 150px;
        width: 300px;
        height: 300px;
        border: 2px solid;
        color: pink;
} */

/* .map {
    max-height: 960px;
    min-width: 960px;
    background-image: url("Map1.png");
    background-size: 280px;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    background-color: green;
    position: relative;
} */

.character {
    width: calc(var(--grid-cell)* 2);
    height: calc(var(--grid-cell)* 2);
    position: absolute;
    overflow: hidden;
}

.character_spritesheet {
    position: absolute;
    background: url("./assets/images/AjFP5.png") no-repeat no-repeat;
    background-size: 100%;
    width: calc(var(--grid-cell)* 8);
    height: calc(var(--grid-cell)* 8);
}

.character[facing="right"] .character_spritesheet {
    background-position-y: calc(var(--pixel-size) * -64);
}

.character[facing="up"] .character_spritesheet {
    background-position-y: calc(var(--pixel-size) * -96);
}

.character[facing="left"] .character_spritesheet {
    background-position-y: calc(var(--pixel-size) * -32);
}

.character[walking="true"] .character_spritesheet {
    animation: walkAnimation 0.6s steps(4) infinite;
}

@keyframes walkAnimation {
    from {
        transform: translate3d(0%, 0%, 0);
    }

    to {
        transform: translate3d(-100%, 0%, 0);
    }
}